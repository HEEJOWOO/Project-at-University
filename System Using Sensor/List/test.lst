
AVRASM ver. 2.1.30  C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm Tue Dec 04 00:33:36 2018

C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1062): warning: Register r6 already defined by the .DEF directive
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1063): warning: Register r8 already defined by the .DEF directive
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1064): warning: Register r4 already defined by the .DEF directive
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1065): warning: Register r10 already defined by the .DEF directive
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1066): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _key=R5
                 	.DEF _count1=R6
                 	.DEF _PIR_Status=R8
                 	.DEF _ii=R4
                 	.DEF _count=R10
                 	.DEF _i=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00ea 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 02bb 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0xC:
000046 f9c0
000047 b0a4
000048 9299
000049 f882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8
00004a 9080      	.DB  0x80,0x90
                 _0xD:
00004b f9c0
00004c b0a4
00004d 9299
00004e f882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8
00004f 9080      	.DB  0x80,0x90
                 _0xE:
000050 0100
000051 0302
000052 0504
000053 0706      	.DB  0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7
000054 0908      	.DB  0x8,0x9
                 _0x71:
000055 00e0
000056 0000
000057 0000
000058 0000      	.DB  0xE0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000059 0000
00005a 0000
00005b 0000
00005c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005d 0000
00005e 0000
00005f 0000
000060 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000061 0000
000062 0000
000063 0000
000064 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000065 0000
000066 0000
000067 0000
000068 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000069 0000
00006a 0000
00006b 0000
00006c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006d 0000
00006e 0000
00006f 0000
000070 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000071 0000
000072 0000
000073 0000
000074 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1129): warning: .cseg .db misalignment - padding zero byte
000075 0000      	.DB  0x0
                 _0xCA:
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000      	.DB  0x0,0x0
                 _0x0:
00007b 3225
00007c 322e
00007d 0066
00007e 6543      	.DB  0x25,0x32,0x2E,0x32,0x66,0x0,0x43,0x65
00007f 736c
000080 7569
000081 2073
000082 6843      	.DB  0x6C,0x73,0x69,0x75,0x73,0x20,0x43,0x68
000083 6e61
000084 6567
000085 4d00
000086 746f      	.DB  0x61,0x6E,0x67,0x65,0x0,0x4D,0x6F,0x74
000087 6f69
000088 206e
000089 6544
00008a 6574      	.DB  0x69,0x6F,0x6E,0x20,0x44,0x65,0x74,0x65
00008b 7463
00008c 2500
00008d 3330
00008e 2064      	.DB  0x63,0x74,0x0,0x25,0x30,0x33,0x64,0x20
00008f 6d63
000090 4f00
000091 6570
000092 206e      	.DB  0x63,0x6D,0x0,0x4F,0x70,0x65,0x6E,0x20
000093 2020
000094 2020
000095 2020
000096 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000097 2020
000098 2020
000099 2020
00009a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00009b 2020
00009c 2020
00009d 2020
00009e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00009f 0020
0000a0 6f4d
0000a1 6974
0000a2 6e6f      	.DB  0x20,0x0,0x4D,0x6F,0x74,0x69,0x6F,0x6E
0000a3 4520
0000a4 646e
0000a5 6465
0000a6 4300      	.DB  0x20,0x45,0x6E,0x64,0x65,0x64,0x0,0x43
0000a7 6f6c
0000a8 6573
0000a9 4300
0000aa 6f6f      	.DB  0x6C,0x6F,0x73,0x65,0x0,0x43,0x6F,0x6F
0000ab 696c
0000ac 676e
0000ad 6820
0000ae 6165      	.DB  0x6C,0x69,0x6E,0x67,0x20,0x68,0x65,0x61
0000af 2074
0000b0 2020
0000b1 2020
0000b2 2020      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b3 2020
0000b4 2020
0000b5 2020
0000b6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b7 2020
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1149): warning: .cseg .db misalignment - padding zero byte
0000b8 0000      	.DB  0x20,0x20,0x0
                 _0x2000000:
0000b9 4e2d
0000ba 4e41
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1151): warning: .cseg .db misalignment - padding zero byte
0000bb 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1153): warning: .cseg .db misalignment - padding zero byte
0000bc 0001      	.DB  0x1
                 _0x2080000:
0000bd 4e2d
0000be 4e41
0000bf 4900
0000c0 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\øÏ»Ò¡∂\Desktop\HJ\List\test.asm(1156): warning: .cseg .db misalignment - padding zero byte
0000c1 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000c2 000a      	.DW  0x0A
0000c3 058b      	.DW  _seg_pat
0000c4 008c      	.DW  _0xC*2
                 
0000c5 000a      	.DW  0x0A
0000c6 0595      	.DW  _seg_pat1
0000c7 0096      	.DW  _0xD*2
                 
0000c8 000a      	.DW  0x0A
0000c9 059f      	.DW  _match
0000ca 00a0      	.DW  _0xE*2
                 
0000cb 000f      	.DW  0x0F
0000cc 0500      	.DW  _0x8A
0000cd 00fc      	.DW  _0x0*2+6
                 
0000ce 000f      	.DW  0x0F
0000cf 050f      	.DW  _0x8A+15
0000d0 00fc      	.DW  _0x0*2+6
                 
0000d1 000f      	.DW  0x0F
0000d2 051e      	.DW  _0x8A+30
0000d3 00fc      	.DW  _0x0*2+6
                 
0000d4 000e      	.DW  0x0E
0000d5 052d      	.DW  _0x8A+45
0000d6 010b      	.DW  _0x0*2+21
                 
0000d7 001f      	.DW  0x1F
0000d8 053b      	.DW  _0x8A+59
0000d9 0121      	.DW  _0x0*2+43
                 
0000da 000d      	.DW  0x0D
0000db 055a      	.DW  _0x8A+90
0000dc 0140      	.DW  _0x0*2+74
                 
0000dd 0006      	.DW  0x06
0000de 0567      	.DW  _0x8A+103
0000df 014d      	.DW  _0x0*2+87
                 
0000e0 001e      	.DW  0x1E
0000e1 056d      	.DW  _0x8A+109
0000e2 0153      	.DW  _0x0*2+93
                 
0000e3 000a      	.DW  0x0A
0000e4 0004      	.DW  0x04
0000e5 00ec      	.DW  _0xCA*2
                 
0000e6 0001      	.DW  0x01
0000e7 05b7      	.DW  __seed_G104
0000e8 0178      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0000e9 0000      	.DW  0
                 
                 __RESET:
0000ea 94f8      	CLI
0000eb 27ee      	CLR  R30
0000ec bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000ed e0f1      	LDI  R31,1
0000ee bff5      	OUT  MCUCR,R31
0000ef bfe5      	OUT  MCUCR,R30
0000f0 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0000f2 e1f8      	LDI  R31,0x18
0000f3 bdf1      	OUT  WDTCR,R31
0000f4 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000f5 e08d      	LDI  R24,(14-2)+1
0000f6 e0a2      	LDI  R26,2
0000f7 27bb      	CLR  R27
                 __CLEAR_REG:
0000f8 93ed      	ST   X+,R30
0000f9 958a      	DEC  R24
0000fa f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000fb e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000fc e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000fd e0a0      	LDI  R26,LOW(__SRAM_START)
0000fe e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000ff 93ed      	ST   X+,R30
000100 9701      	SBIW R24,1
000101 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000102 e8e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000103 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000104 9185      	LPM  R24,Z+
000105 9195      	LPM  R25,Z+
000106 9700      	SBIW R24,0
000107 f061      	BREQ __GLOBAL_INI_END
000108 91a5      	LPM  R26,Z+
000109 91b5      	LPM  R27,Z+
00010a 9005      	LPM  R0,Z+
00010b 9015      	LPM  R1,Z+
00010c 01bf      	MOVW R22,R30
00010d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00010e 9005      	LPM  R0,Z+
00010f 920d      	ST   X+,R0
000110 9701      	SBIW R24,1
000111 f7e1      	BRNE __GLOBAL_INI_LOOP
000112 01fb      	MOVW R30,R22
000113 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000114 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000115 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000116 bfed      	OUT  SPL,R30
000117 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000118 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000119 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00011a e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00011b 940c 02c7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 
                 	.CSEG
                 _LCD_Data:
                 ;	ch -> Y+0
00011d 91e0 0065 	LDS  R30,101
00011f 60e4      	ORI  R30,4
000120 940e 0a06 	CALL SUBOPT_0x0
000122 7fed      	ANDI R30,0xFD
000123 940e 0a06 	CALL SUBOPT_0x0
000125 940e 0a0b 	CALL SUBOPT_0x1
000127 c171      	RJMP _0x20A0009
                 _LCD_Comm:
                 ;	command -> Y+0
000128 91e0 0065 	LDS  R30,101
00012a 7feb      	ANDI R30,0xFB
00012b 940e 0a06 	CALL SUBOPT_0x0
00012d 7fed      	ANDI R30,0xFD
00012e 940e 0a06 	CALL SUBOPT_0x0
000130 940e 0a0b 	CALL SUBOPT_0x1
000132 c166      	RJMP _0x20A0009
                 _LCD_Delay:
                 ;	ms -> Y+0
000133 81e8      	LD   R30,Y
000134 e0f0      	LDI  R31,0
000135 940e 0a1c 	CALL SUBOPT_0x2
000137 c161      	RJMP _0x20A0009
                 _LCD_Char:
                 ;	ch -> Y+0
000138 e0e1      	LDI  R30,LOW(1)
000139 93ea      	ST   -Y,R30
00013a dff8      	RCALL _LCD_Delay
00013b 81e8      	LD   R30,Y
00013c 93ea      	ST   -Y,R30
00013d dfdf      	RCALL _LCD_Data
00013e c15a      	RJMP _0x20A0009
                 _LCD_Str:
                 ;	*str -> Y+0
                 _0x3:
00013f 81a8      	LD   R26,Y
000140 81b9      	LDD  R27,Y+1
000141 91ec      	LD   R30,X
000142 30e0      	CPI  R30,0
000143 f041      	BREQ _0x5
000144 93ea      	ST   -Y,R30
000145 dff2      	RCALL _LCD_Char
000146 81e8      	LD   R30,Y
000147 81f9      	LDD  R31,Y+1
000148 9631      	ADIW R30,1
000149 83e8      	ST   Y,R30
00014a 83f9      	STD  Y+1,R31
00014b cff3      	RJMP _0x3
                 _0x5:
00014c c04f      	RJMP _0x20A000B
                 _LCD_Pos:
                 ;	x -> Y+1
                 ;	y -> Y+0
00014d 81e9      	LDD  R30,Y+1
00014e e4a0      	LDI  R26,LOW(64)
00014f 02ea      	MULS R30,R26
000150 01f0      	MOVW R30,R0
000151 81a8      	LD   R26,Y
000152 0fea      	ADD  R30,R26
000153 68e0      	ORI  R30,0x80
000154 93ea      	ST   -Y,R30
000155 dfd2      	RCALL _LCD_Comm
000156 c045      	RJMP _0x20A000B
                 _LCD_Clear:
000157 e0e1      	LDI  R30,LOW(1)
000158 940e 0a20 	CALL SUBOPT_0x3
00015a 9508      	RET
                 _LCD_PORT_Init:
00015b efef      	LDI  R30,LOW(255)
00015c bbea      	OUT  0x1A,R30
00015d 91e0 0064 	LDS  R30,100
00015f 60ef      	ORI  R30,LOW(0xF)
000160 93e0 0064 	STS  100,R30
000162 9508      	RET
                 _LCD_Init:
000163 dff7      	RCALL _LCD_PORT_Init
000164 940e 0a27 	CALL SUBOPT_0x4
000166 940e 0a27 	CALL SUBOPT_0x4
000168 940e 0a27 	CALL SUBOPT_0x4
00016a e0ee      	LDI  R30,LOW(14)
00016b 940e 0a20 	CALL SUBOPT_0x3
00016d e0e6      	LDI  R30,LOW(6)
00016e 940e 0a20 	CALL SUBOPT_0x3
000170 dfe6      	RCALL _LCD_Clear
000171 9508      	RET
                 ;	p -> Y+0
                 ;	p -> Y+0
                 ;#include <stdio.h>
                 ;#define SRF02_ERR_MAX_CNT 2000
                 ;#define SRF02_Return_inch 80
                 ;#define SRF02_Return_Cm 81
                 ;#define SRF02_Return_microSecond 82
                 ;#define ADC_VREF_TYPE 0x00  // A/D ƒ¡πˆ≈Õ ªÁøÎ ±‚¡ÿ ¿¸æ–,AREF ¥‹¿⁄ ªÁøÎ, ≥ª∫Œ VREF ≤Ù±‚ º≥¡§
                 ;#define ADC_AVCC_TYPE 0x40 // A/D ƒ¡πˆ≈Õ ªÁøÎ ±‚¡ÿ ¿¸æ–,AVcc¥‹¿⁄øÕ ARREø° ø¨∞·µ» ƒø∆–Ω√≈Õ ªÁøÎ
                 ;#define ADC_RES_TYPE  0x80  // A/D ƒ¡πˆ≈Õ ªÁøÎ ±‚¡ÿ ¿¸æ–,reserved
                 ;#define ADC_2_56_TYPE 0xC0  // A/D ƒ¡πˆ≈Õ ªÁøÎ ±‚¡ÿ ¿¸æ–,≥ª∫Œ 2.56VøÕ AREFø° ø¨∞·µ» ƒø∆–Ω√≈Õ ªÁøÎ
                 ;#define LCD_WDATA PORTA // LCD µ•¿Ã≈Õ ∆˜∆Æ ¡§¿«
                 ;#define LCD_WINST PORTA
                 ;#define LCD_CTRL PORTG // LCD ¡¶æÓ∆˜∆Æ ¡§¿«
                 ;#define LCD_EN 0
                 ;#define LCD_RW 1
                 ;#define LCD_RS 2
                 ;#define Do 4000
                 ;#define HDo 300
                 ;#define PIR_sensor1 PINE.5
                 ;#define PIR_sensor2 PINE.7
                 ;#define servo_motor PORTE.6
                 ;#define num 10
                 ;char seg_pat[10]= {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90};
                 
                 	.DSEG
                 ;char seg_pat1[10]= {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90};
                 ;char match[10]={0,1,2,3,4,5,6,7,8,9};
                 ;unsigned char key;
                 ;int count1=0;
                 ;unsigned int PIR_Status=0;
                 ;char ii=0;
                 ;int count=0;
                 ;int i =0;
                 ;int flag,flag2=0;
                 ;int k,b,n=0;
                 ;int k1=0;
                 ;unsigned char ti_Cnt_1ms; // 1ms ¥‹¿ß Ω√∞£ ∞Ëºˆ ¿ß«— ¿¸ø™ ∫Øºˆº±æ
                 ;unsigned char Com_Reg;
                 ;void FND_MATCH(int x)
                 ; 0000 0028 {
                 
                 	.CSEG
                 _FND_MATCH:
                 ; 0000 0029 
                 ; 0000 002A        for(ii=0 ; ii<11 ; ii++)
                 ;	x -> Y+0
000172 2444      	CLR  R4
                 _0x10:
000173 e0eb      	LDI  R30,LOW(11)
000174 164e      	CP   R4,R30
000175 f488      	BRSH _0x11
                 ; 0000 002B         {
                 ; 0000 002C         if(x/10==match[ii])
000176 81a8      	LD   R26,Y
000177 81b9      	LDD  R27,Y+1
000178 e0ea      	LDI  R30,LOW(10)
000179 e0f0      	LDI  R31,HIGH(10)
00017a 940e 0e23 	CALL __DIVW21
00017c 940e 0a2f 	CALL SUBOPT_0x5
00017e f431      	BRNE _0x12
                 ; 0000 002D         {
                 ; 0000 002E         PORTB = seg_pat[ii];
00017f 2de4      	MOV  R30,R4
000180 e0f0      	LDI  R31,0
000181 57e5      	SUBI R30,LOW(-_seg_pat)
000182 4ffa      	SBCI R31,HIGH(-_seg_pat)
000183 81e0      	LD   R30,Z
000184 bbe8      	OUT  0x18,R30
                 ; 0000 002F         }
                 ; 0000 0030         }
                 _0x12:
000185 9443      	INC  R4
000186 cfec      	RJMP _0x10
                 _0x11:
                 ; 0000 0031         for(ii=0 ; ii<11 ; ii++)
000187 2444      	CLR  R4
                 _0x14:
000188 e0eb      	LDI  R30,LOW(11)
000189 164e      	CP   R4,R30
00018a f488      	BRSH _0x15
                 ; 0000 0032         {
                 ; 0000 0033         if(x%10==match[ii])
00018b 81a8      	LD   R26,Y
00018c 81b9      	LDD  R27,Y+1
00018d e0ea      	LDI  R30,LOW(10)
00018e e0f0      	LDI  R31,HIGH(10)
00018f 940e 0e59 	CALL __MODW21
000191 940e 0a2f 	CALL SUBOPT_0x5
000193 f431      	BRNE _0x16
                 ; 0000 0034         {
                 ; 0000 0035         PORTC = seg_pat1[ii];
000194 2de4      	MOV  R30,R4
000195 e0f0      	LDI  R31,0
000196 56eb      	SUBI R30,LOW(-_seg_pat1)
000197 4ffa      	SBCI R31,HIGH(-_seg_pat1)
000198 81e0      	LD   R30,Z
000199 bbe5      	OUT  0x15,R30
                 ; 0000 0036         }
                 ; 0000 0037         }
                 _0x16:
00019a 9443      	INC  R4
00019b cfec      	RJMP _0x14
                 _0x15:
                 ; 0000 0038 }
                 _0x20A000B:
00019c 9622      	ADIW R28,2
00019d 9508      	RET
                 ;void FND_init()
                 ; 0000 003A {
                 _FND_init:
                 ; 0000 003B PORTB = seg_pat[0];
00019e 91e0 058b 	LDS  R30,_seg_pat
0001a0 bbe8      	OUT  0x18,R30
                 ; 0000 003C PORTC = seg_pat1[0];
0001a1 91e0 0595 	LDS  R30,_seg_pat1
0001a3 bbe5      	OUT  0x15,R30
                 ; 0000 003D }
0001a4 9508      	RET
                 ;void Port_init(){
                 ; 0000 003E void Port_init(){
                 _Port_init:
                 ; 0000 003F     DDRE.5=0;
0001a5 9815      	CBI  0x2,5
                 ; 0000 0040     DDRE.6=1;
0001a6 9a16      	SBI  0x2,6
                 ; 0000 0041     DDRE.7=0;
0001a7 9817      	CBI  0x2,7
                 ; 0000 0042     DDRB=0xff;
0001a8 efef      	LDI  R30,LOW(255)
0001a9 bbe7      	OUT  0x17,R30
                 ; 0000 0043     DDRC=0xff;
0001aa bbe4      	OUT  0x14,R30
                 ; 0000 0044     DDRD=0x00;
0001ab e0e0      	LDI  R30,LOW(0)
0001ac bbe1      	OUT  0x11,R30
                 ; 0000 0045     PORTD=0xff;
0001ad efef      	LDI  R30,LOW(255)
0001ae bbe2      	OUT  0x12,R30
                 ; 0000 0046 }
0001af 9508      	RET
                 ;void myDelay_us(unsigned int delay)
                 ; 0000 0048 {
                 ; 0000 0049     int i;
                 ; 0000 004A     for(i=0; i<delay; i++)
                 ;	delay -> Y+2
                 ;	i -> R16,R17
                 ; 0000 004B     {
                 ; 0000 004C         delay_us(1);
                 ; 0000 004D     }
                 ; 0000 004E }
                 ;void SSound(int time)
                 ; 0000 0050 {
                 ; 0000 0051     int i, tim;
                 ; 0000 0052     tim = 50000/time; //¿Ω∞Ë∏∂¥Ÿ ∞∞¿∫ Ω√∞£µøæ» øÔ∏Æµµ∑œ tim ∫Øºˆ ªÁøÎ
                 ;	time -> Y+4
                 ;	i -> R16,R17
                 ;	tim -> R18,R19
                 ; 0000 0053     for(i=0; i<tim; i++)
                 ; 0000 0054     {
                 ; 0000 0055         PORTG |= 1<<4; //buzzer on, PORTG¿« 4π¯ «… on(out 1)
                 ; 0000 0056         myDelay_us(time);
                 ; 0000 0057         PORTG &= ~(1<<4); //buzzer off, PORTG¿« 4π¯ «… off(out 0)
                 ; 0000 0058         myDelay_us(time);
                 ; 0000 0059     }
                 ; 0000 005A }
                 ;void B_correct()
                 ; 0000 005C {
                 ; 0000 005D      SSound(Do);
                 ; 0000 005E      delay_ms(30);
                 ; 0000 005F 
                 ; 0000 0060      SSound(HDo);
                 ; 0000 0061      delay_ms(30);
                 ; 0000 0062 }
                 ;void ADC_Init(void)
                 ; 0000 0064 {
                 _ADC_Init:
                 ; 0000 0065 ADCSRA  = 0x00;        // ADC º≥¡§¿ª ¿ß«— ∫Ò»∞º∫»≠
0001b0 e0e0      	LDI  R30,LOW(0)
0001b1 b9e6      	OUT  0x6,R30
                 ; 0000 0066 ADMUX   = ADC_AVCC_TYPE | (0<ADLAR) | (0<<MUX0);
0001b2 e4e1      	LDI  R30,LOW(65)
0001b3 b9e7      	OUT  0x7,R30
                 ; 0000 0067 // REFS1°≠0='11', ADLAR=0, MUX=0(ADC0 º±≈√)
                 ; 0000 0068 ADCSRA  = (1<<ADEN) | (3<<ADPS0)| (1<<ADFR);
0001b4 eae3      	LDI  R30,LOW(163)
0001b5 b9e6      	OUT  0x6,R30
                 ; 0000 0069 // 1<<ADEN  : AD∫Ø»Ø »∞º∫»≠
                 ; 0000 006A // 1<<ADFR  : Free Running ∏µÂ »∞º∫»≠
                 ; 0000 006B // 3<<ADPS0 : AC∫Ø»Ø ∫–¡÷∫Òº∫¡§ - 8∫–¡÷.
                 ; 0000 006C }
0001b6 9508      	RET
                 ;
                 ;/**
                 ;* @brief  Differential ADC ∞·∞˙ ¿–æÓø¿¥¬ «‘ºˆ
                 ;* @param  adc_input: ADC «œ∞Ì¿⁄ «œ¥¬ √§≥Œ¿« π¯»£ (8 ~ 0x1F)
                 ;* @retval AD ∫Ø»Ø ∞™( 0 ~ 1023),0v=0,5v=1023 2.5v=512
                 ;*/
                 ;unsigned int Read_ADC_Data_Diff(unsigned char adc_mux)
                 ; 0000 0074 {
                 _Read_ADC_Data_Diff:
                 ; 0000 0075 unsigned int ADC_Data = 0;
                 ; 0000 0076 if(adc_mux < 8) return 0xFFFF;                     // æÁ±ÿΩ≈»£∞° æ∆¥— ¥‹±ÿ MUX ¿‘∑¬Ω√ ¡æ∑·
0001b7 931a      	ST   -Y,R17
0001b8 930a      	ST   -Y,R16
                 ;	adc_mux -> Y+2
                 ;	ADC_Data -> R16,R17
                +
0001b9 e000     +LDI R16 , LOW ( 0 )
0001ba e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0001bb 81aa      	LDD  R26,Y+2
0001bc 30a8      	CPI  R26,LOW(0x8)
0001bd f418      	BRSH _0x23
0001be efef      	LDI  R30,LOW(65535)
0001bf efff      	LDI  R31,HIGH(65535)
0001c0 c0ed      	RJMP _0x20A0008
                 ; 0000 0077 // AD ∫Ø»Ø √§≥Œ º≥¡§
                 ; 0000 0078 ADMUX    &= ~(0x1F);
                 _0x23:
0001c1 b1e7      	IN   R30,0x7
0001c2 7ee0      	ANDI R30,LOW(0xE0)
0001c3 b9e7      	OUT  0x7,R30
                 ; 0000 0079 ADMUX |= (adc_mux & 0x1F);
0001c4 b1e7      	IN   R30,0x7
0001c5 2fae      	MOV  R26,R30
0001c6 81ea      	LDD  R30,Y+2
0001c7 71ef      	ANDI R30,LOW(0x1F)
0001c8 2bea      	OR   R30,R26
0001c9 b9e7      	OUT  0x7,R30
                 ; 0000 007A ADCSRA |= (1<<ADSC);             // AD ∫Ø»Ø Ω√¿€
0001ca 9a36      	SBI  0x6,6
                 ; 0000 007B while(!(ADCSRA & (1 << ADIF)));     // AD ∫Ø»Ø ¡æ∑· ¥Î±‚
                 _0x24:
0001cb 9b34      	SBIS 0x6,4
0001cc cffe      	RJMP _0x24
                 ; 0000 007C ADC_Data  = ADCL;
0001cd b104      	IN   R16,4
0001ce 2711      	CLR  R17
                 ; 0000 007D ADC_Data  |= ADCH<<8;
0001cf b1e5      	IN   R30,0x5
0001d0 2ffe      	MOV  R31,R30
0001d1 e0e0      	LDI  R30,0
                +
0001d2 2b0e     +OR R16 , R30
0001d3 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
                 ; 0000 007E flag+=1;
0001d4 91e0 05a9 	LDS  R30,_flag
0001d6 91f0 05aa 	LDS  R31,_flag+1
0001d8 9631      	ADIW R30,1
0001d9 93e0 05a9 	STS  _flag,R30
0001db 93f0 05aa 	STS  _flag+1,R31
                 ; 0000 007F flag2+=1;
0001dd 91e0 05ab 	LDS  R30,_flag2
0001df 91f0 05ac 	LDS  R31,_flag2+1
0001e1 9631      	ADIW R30,1
0001e2 93e0 05ab 	STS  _flag2,R30
0001e4 93f0 05ac 	STS  _flag2+1,R31
                 ; 0000 0080 return ADC_Data;
0001e6 c0c6      	RJMP _0x20A0007
                 ; 0000 0081 
                 ; 0000 0082 }
                 ;
                 ;
                 ;
                 ;int SRF02_I2C_Write(char address, char reg, char data)
                 ; 0000 0087 {
                 _SRF02_I2C_Write:
                 ; 0000 0088 unsigned int srf02_ErrCnt = 0;
                 ; 0000 0089 // I2C Ω√¿€∫Ò∆Æ ¿¸º€
                 ; 0000 008A TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
0001e7 931a      	ST   -Y,R17
0001e8 930a      	ST   -Y,R16
                 ;	address -> Y+4
                 ;	reg -> Y+3
                 ;	data -> Y+2
                 ;	srf02_ErrCnt -> R16,R17
                +
0001e9 e000     +LDI R16 , LOW ( 0 )
0001ea e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0001eb eae4      	LDI  R30,LOW(164)
0001ec 93e0 0074 	STS  116,R30
                 ; 0000 008B // ≈ÎΩ≈ Ω√¿€ ¥Î±‚
                 ; 0000 008C while(!(TWCR & (1<<TWINT) )){if(srf02_ErrCnt++ > SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x27:
0001ee 91e0 0074 	LDS  R30,116
0001f0 78e0      	ANDI R30,LOW(0x80)
0001f1 f441      	BRNE _0x29
0001f2 940e 0a39 	CALL SUBOPT_0x6
0001f4 f020      	BRLO _0x2A
0001f5 e0e0      	LDI  R30,LOW(0)
0001f6 e0f0      	LDI  R31,HIGH(0)
0001f7 940c 05d9 	JMP  _0x20A0006
                 _0x2A:
0001f9 cff4      	RJMP _0x27
                 _0x29:
                 ; 0000 008D // I2C ¿Â∫Ò ¡÷º“ º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 008E TWDR = address; // SLA + W
0001fa 940e 0a40 	CALL SUBOPT_0x7
                 ; 0000 008F TWCR = (1<<TWINT) | (1<<TWEN);
                 ; 0000 0090 // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 0091 while(!(TWCR & (1<<TWINT))){if(srf02_ErrCnt++ > SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x2B:
0001fc 91e0 0074 	LDS  R30,116
0001fe 78e0      	ANDI R30,LOW(0x80)
0001ff f441      	BRNE _0x2D
000200 940e 0a39 	CALL SUBOPT_0x6
000202 f020      	BRLO _0x2E
000203 e0e0      	LDI  R30,LOW(0)
000204 e0f0      	LDI  R31,HIGH(0)
000205 940c 05d9 	JMP  _0x20A0006
                 _0x2E:
000207 cff4      	RJMP _0x2B
                 _0x2D:
                 ; 0000 0092 // ∑π¡ˆΩ∫≈Õ ¿ßƒ° º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 0093 TWDR = reg;
000208 81eb      	LDD  R30,Y+3
000209 940e 0a47 	CALL SUBOPT_0x8
                 ; 0000 0094 TWCR = (1<<TWINT) | (1<<TWEN);
                 ; 0000 0095 // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 0096 while(!(TWCR & (1<<TWINT))){if(srf02_ErrCnt++ > SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x2F:
00020b 91e0 0074 	LDS  R30,116
00020d 78e0      	ANDI R30,LOW(0x80)
00020e f441      	BRNE _0x31
00020f 940e 0a39 	CALL SUBOPT_0x6
000211 f020      	BRLO _0x32
000212 e0e0      	LDI  R30,LOW(0)
000213 e0f0      	LDI  R31,HIGH(0)
000214 940c 05d9 	JMP  _0x20A0006
                 _0x32:
000216 cff4      	RJMP _0x2F
                 _0x31:
                 ; 0000 0097 // ∏Ì∑…(command) º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 0098 TWDR = data;
000217 81ea      	LDD  R30,Y+2
000218 940e 0a47 	CALL SUBOPT_0x8
                 ; 0000 0099 TWCR = (1<<TWINT) | (1<<TWEN);
                 ; 0000 009A // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 009B while(!(TWCR & (1<<TWINT))){if(srf02_ErrCnt++ > SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x33:
00021a 91e0 0074 	LDS  R30,116
00021c 78e0      	ANDI R30,LOW(0x80)
00021d f441      	BRNE _0x35
00021e 940e 0a39 	CALL SUBOPT_0x6
000220 f020      	BRLO _0x36
000221 e0e0      	LDI  R30,LOW(0)
000222 e0f0      	LDI  R31,HIGH(0)
000223 940c 05d9 	JMP  _0x20A0006
                 _0x36:
000225 cff4      	RJMP _0x33
                 _0x35:
                 ; 0000 009C // I2C ¡æ∑·∫Ò∆Æ ¿¸º€
                 ; 0000 009D TWCR = (1<<TWINT) | (1<<TWSTO) | (1<<TWEN); // stop bit
000226 e9e4      	LDI  R30,LOW(148)
000227 93e0 0074 	STS  116,R30
                 ; 0000 009E return 1;
000229 e0e1      	LDI  R30,LOW(1)
00022a e0f0      	LDI  R31,HIGH(1)
00022b 940c 05d9 	JMP  _0x20A0006
                 ; 0000 009F }
                 ;
                 ;unsigned char SRF02_I2C_Read(char address, char reg)
                 ; 0000 00A2 {
                 _SRF02_I2C_Read:
                 ; 0000 00A3 char read_data = 0;
                 ; 0000 00A4 unsigned int srf02_ErrCnt = 0;
                 ; 0000 00A5 // I2C Ω√¿€∫Ò∆Æ ¿¸º€
                 ; 0000 00A6 TWCR = 0xA4;//TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
00022d 940e 0ebb 	CALL __SAVELOCR4
                 ;	address -> Y+5
                 ;	reg -> Y+4
                 ;	read_data -> R17
                 ;	srf02_ErrCnt -> R18,R19
00022f e010      	LDI  R17,0
                +
000230 e020     +LDI R18 , LOW ( 0 )
000231 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000232 eae4      	LDI  R30,LOW(164)
000233 93e0 0074 	STS  116,R30
                 ; 0000 00A7 // ≈ÎΩ≈ Ω√¿€ ¥Î±‚
                 ; 0000 00A8 while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x37:
000235 91e0 0074 	LDS  R30,116
000237 78e0      	ANDI R30,LOW(0x80)
000238 f431      	BRNE _0x39
000239 940e 0a4d 	CALL SUBOPT_0x9
00023b f010      	BRLO _0x3A
00023c e0e0      	LDI  R30,LOW(0)
00023d c04b      	RJMP _0x20A000A
                 _0x3A:
00023e cff6      	RJMP _0x37
                 _0x39:
                 ; 0000 00A9 // I2C ¿Â∫Ò ¡÷º“(SLA+W) º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 00AA TWDR = address; // SLA + W
00023f 81ed      	LDD  R30,Y+5
000240 940e 0a47 	CALL SUBOPT_0x8
                 ; 0000 00AB TWCR = 0x84;//TWCR = (1<<TWINT) | (1<<TWEN);
                 ; 0000 00AC // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 00AD while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x3B:
000242 91e0 0074 	LDS  R30,116
000244 78e0      	ANDI R30,LOW(0x80)
000245 f431      	BRNE _0x3D
000246 940e 0a4d 	CALL SUBOPT_0x9
000248 f010      	BRLO _0x3E
000249 e0e0      	LDI  R30,LOW(0)
00024a c03e      	RJMP _0x20A000A
                 _0x3E:
00024b cff6      	RJMP _0x3B
                 _0x3D:
                 ; 0000 00AE // ∑π¡ˆΩ∫≈Õ ¿ßƒ° º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 00AF TWDR = reg;
00024c 940e 0a40 	CALL SUBOPT_0x7
                 ; 0000 00B0 TWCR = (1<<TWINT) | (1<<TWEN);
                 ; 0000 00B1 // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 00B2 while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x3F:
00024e 91e0 0074 	LDS  R30,116
000250 78e0      	ANDI R30,LOW(0x80)
000251 f431      	BRNE _0x41
000252 940e 0a4d 	CALL SUBOPT_0x9
000254 f010      	BRLO _0x42
000255 e0e0      	LDI  R30,LOW(0)
000256 c032      	RJMP _0x20A000A
                 _0x42:
000257 cff6      	RJMP _0x3F
                 _0x41:
                 ; 0000 00B3 // I2C ¿ÁΩ√¿€¿ª ¿ß«— Ω√¿€ ∫Ò∆Æ ¿¸º€
                 ; 0000 00B4 TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
000258 eae4      	LDI  R30,LOW(164)
000259 93e0 0074 	STS  116,R30
                 ; 0000 00B5 // wait for confirmation of transmit
                 ; 0000 00B6 while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x43:
00025b 91e0 0074 	LDS  R30,116
00025d 78e0      	ANDI R30,LOW(0x80)
00025e f431      	BRNE _0x45
00025f 940e 0a4d 	CALL SUBOPT_0x9
000261 f010      	BRLO _0x46
000262 e0e0      	LDI  R30,LOW(0)
000263 c025      	RJMP _0x20A000A
                 _0x46:
000264 cff6      	RJMP _0x43
                 _0x45:
                 ; 0000 00B7 // I2C ¿Â∫Ò ¡÷º“(SLA+R) º€Ω≈¿ª ¿ß«— ¿˚¿Á π◊ ¿¸º€ Ω√¿€
                 ; 0000 00B8 TWDR = address +1; // SLA + R
000265 81ed      	LDD  R30,Y+5
000266 5fef      	SUBI R30,-LOW(1)
000267 93e0 0073 	STS  115,R30
                 ; 0000 00B9 TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
000269 ece4      	LDI  R30,LOW(196)
00026a 93e0 0074 	STS  116,R30
                 ; 0000 00BA // º€Ω≈ øœ∑· ¥Î±‚
                 ; 0000 00BB while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x47:
00026c 91e0 0074 	LDS  R30,116
00026e 78e0      	ANDI R30,LOW(0x80)
00026f f431      	BRNE _0x49
000270 940e 0a4d 	CALL SUBOPT_0x9
000272 f010      	BRLO _0x4A
000273 e0e0      	LDI  R30,LOW(0)
000274 c014      	RJMP _0x20A000A
                 _0x4A:
000275 cff6      	RJMP _0x47
                 _0x49:
                 ; 0000 00BC // µ•¿Ã≈Õ ºˆΩ≈¿ª ¿ß«— ≈¨∑∞ ¿¸º€
                 ; 0000 00BD TWCR = (1<<TWINT) | (1<<TWEN);
000276 e8e4      	LDI  R30,LOW(132)
000277 93e0 0074 	STS  116,R30
                 ; 0000 00BE // ºˆΩ≈ øœ∑· ¥Î±‚
                 ; 0000 00BF while(!(TWCR & 0x80)){if(srf02_ErrCnt++>SRF02_ERR_MAX_CNT){ return 0; } };
                 _0x4B:
000279 91e0 0074 	LDS  R30,116
00027b 78e0      	ANDI R30,LOW(0x80)
00027c f431      	BRNE _0x4D
00027d 940e 0a4d 	CALL SUBOPT_0x9
00027f f010      	BRLO _0x4E
000280 e0e0      	LDI  R30,LOW(0)
000281 c007      	RJMP _0x20A000A
                 _0x4E:
000282 cff6      	RJMP _0x4B
                 _0x4D:
                 ; 0000 00C0 // ºˆΩ≈µ» µ•¿Ã≈Õ π›»Ø ¿ß«œø© ∫Øºˆ ¿˙¿Â
                 ; 0000 00C1 read_data = TWDR;
000283 9110 0073 	LDS  R17,115
                 ; 0000 00C2 // I2C ¡æ∑·∫Ò∆Æ ¿¸º€
                 ; 0000 00C3 TWCR = (1<<TWINT) | (1<<TWSTO) | (1<<TWEN);
000285 e9e4      	LDI  R30,LOW(148)
000286 93e0 0074 	STS  116,R30
                 ; 0000 00C4 // ºˆΩ≈µ» µ•¿Ã≈Õ π›»Ø
                 ; 0000 00C5 return read_data;
000288 2fe1      	MOV  R30,R17
                 _0x20A000A:
000289 940e 0ec2 	CALL __LOADLOCR4
00028b 9626      	ADIW R28,6
00028c 9508      	RET
                 ; 0000 00C6 }
                 ;
                 ;void I2C_Init(void)
                 ; 0000 00C9 {
                 _I2C_Init:
                 ; 0000 00CA TWBR = 0x40; // 100kHz I2C clock frequency TWI≈ÎΩ≈º”µµ ∑π¡ˆΩ∫≈Õ
00028d e4e0      	LDI  R30,LOW(64)
00028e 93e0 0070 	STS  112,R30
                 ; 0000 00CB }
000290 9508      	RET
                 ;
                 ;void change_Sonar_Addr(unsigned char ori, unsigned char des)// SFR02 ∏µ‚¿« ¡÷º“ πŸ≤Ÿ¥¬ «‘ºˆ
                 ; 0000 00CE {
                 ; 0000 00CF // ori-> ±‚¡∏ ¡÷º“ des-> πŸ≤‹¡÷º“
                 ; 0000 00D0 // æÓµÂ∑πΩ∫¥¬ æ∆∑°¿« 16∞≥∏∏ «„øÎµ 
                 ; 0000 00D1 switch(des)
                 ;	ori -> Y+1
                 ;	des -> Y+0
                 ; 0000 00D2 {
                 ; 0000 00D3 case 0xE0:
                 ; 0000 00D4 case 0xE2:
                 ; 0000 00D5 case 0xE4:
                 ; 0000 00D6 case 0xE6:
                 ; 0000 00D7 case 0xE8:
                 ; 0000 00D8 case 0xEA:
                 ; 0000 00D9 case 0xEC:
                 ; 0000 00DA case 0xEE:
                 ; 0000 00DB case 0xF0:
                 ; 0000 00DC case 0xF2:
                 ; 0000 00DD case 0xF4:
                 ; 0000 00DE case 0xF6:
                 ; 0000 00DF case 0xF8:
                 ; 0000 00E0 case 0xFA:
                 ; 0000 00E1 case 0xFC:
                 ; 0000 00E2 case 0xFE:
                 ; 0000 00E3 // ID∫Ø∞Ê Ω√ƒˆΩ∫ø° µ˚∂Û ±‚¡∏ ºæº≠ø° ∫Ø∞Ê∏Ì∑…¿ª ¿¸º€
                 ; 0000 00E4 SRF02_I2C_Write(ori,Com_Reg,0xA0);
                 ; 0000 00E5 SRF02_I2C_Write(ori,Com_Reg,0xA5);
                 ; 0000 00E6 SRF02_I2C_Write(ori,Com_Reg,0xAA);
                 ; 0000 00E7 // ID∫Ø∞Ê Ω√ƒˆΩ∫ø° µ˚∂Û Ω≈±‘ ID ¿¸¥ﬁ
                 ; 0000 00E8 SRF02_I2C_Write(ori,Com_Reg,des);
                 ; 0000 00E9 break;
                 ; 0000 00EA }
                 ; 0000 00EB }
                 ;
                 ;void startRanging(char addr)
                 ; 0000 00EE {
                 _startRanging:
                 ; 0000 00EF // Cm ¥‹¿ß∑Œ √¯¡§ ø‰√ª.
                 ; 0000 00F0     SRF02_I2C_Write(addr, Com_Reg,SRF02_Return_Cm);
                 ;	addr -> Y+0
000291 81e8      	LD   R30,Y
000292 93ea      	ST   -Y,R30
000293 91e0 05b6 	LDS  R30,_Com_Reg
000295 93ea      	ST   -Y,R30
000296 e5e1      	LDI  R30,LOW(81)
000297 93ea      	ST   -Y,R30
000298 df4e      	RCALL _SRF02_I2C_Write
                 ; 0000 00F1 }
                 _0x20A0009:
000299 9621      	ADIW R28,1
00029a 9508      	RET
                 ;
                 ;unsigned int getRange(char addr)
                 ; 0000 00F4 {
                 _getRange:
                 ; 0000 00F5 unsigned int x;
                 ; 0000 00F6 // Get high and then low bytes of the range
                 ; 0000 00F7 x = SRF02_I2C_Read(addr,2) << 8; // Get high Byte
00029b 931a      	ST   -Y,R17
00029c 930a      	ST   -Y,R16
                 ;	addr -> Y+2
                 ;	x -> R16,R17
00029d 81ea      	LDD  R30,Y+2
00029e 93ea      	ST   -Y,R30
00029f e0e2      	LDI  R30,LOW(2)
0002a0 93ea      	ST   -Y,R30
0002a1 df8b      	RCALL _SRF02_I2C_Read
0002a2 2ffe      	MOV  R31,R30
0002a3 e0e0      	LDI  R30,0
0002a4 018f      	MOVW R16,R30
                 ; 0000 00F8 x += SRF02_I2C_Read(addr,3); // Get low Byte
0002a5 81ea      	LDD  R30,Y+2
0002a6 93ea      	ST   -Y,R30
0002a7 e0e3      	LDI  R30,LOW(3)
0002a8 93ea      	ST   -Y,R30
0002a9 df83      	RCALL _SRF02_I2C_Read
0002aa e0f0      	LDI  R31,0
                +
0002ab 0f0e     +ADD R16 , R30
0002ac 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 00F9 return (x);
                 _0x20A0007:
0002ad 01f8      	MOVW R30,R16
                 _0x20A0008:
0002ae 8119      	LDD  R17,Y+1
0002af 8108      	LDD  R16,Y+0
0002b0 9623      	ADIW R28,3
0002b1 9508      	RET
                 ; 0000 00FA }
                 ;
                 ;
                 ;
                 ;
                 ;void Timer0_Init(){
                 ; 0000 00FF void Timer0_Init(){
                 _Timer0_Init:
                 ; 0000 0100     TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02); //CTC∏µÂ, 1024∫–¡÷
0002b2 e0ef      	LDI  R30,LOW(15)
0002b3 bfe3      	OUT  0x33,R30
                 ; 0000 0101     TCNT0 = 0x00;
0002b4 e0e0      	LDI  R30,LOW(0)
0002b5 bfe2      	OUT  0x32,R30
                 ; 0000 0102     OCR0 = 14; //14.7456Mhz / 1024∫–¡÷ / 14¥‹∞Ë = 1.028kHz  //1ms∏∂¥Ÿ πﬂª˝
0002b6 e0ee      	LDI  R30,LOW(14)
0002b7 bfe1      	OUT  0x31,R30
                 ; 0000 0103     TIMSK = (1<<OCIE0);// ∫Ò±≥¿œƒ° ¿Œ≈Õ∑¥∆Æ «„∞°
0002b8 e0e2      	LDI  R30,LOW(2)
0002b9 bfe7      	OUT  0x37,R30
                 ; 0000 0104 }
0002ba 9508      	RET
                 ;
                 ;/**
                 ;* @brief ≈∏¿Ã∏”0 ∫Ò±≥¿œƒ° ¿Œ≈Õ∑¥∆Æ
                 ;*/
                 ;interrupt[TIM0_COMP] void timer0_comp(void){
                 ; 0000 0109 interrupt[16] void timer0_comp(void){
                 _timer0_comp:
0002bb 93ea      	ST   -Y,R30
0002bc b7ef      	IN   R30,SREG
0002bd 93ea      	ST   -Y,R30
                 ; 0000 010A     ti_Cnt_1ms++;
0002be 91e0 05b5 	LDS  R30,_ti_Cnt_1ms
0002c0 5fef      	SUBI R30,-LOW(1)
0002c1 93e0 05b5 	STS  _ti_Cnt_1ms,R30
                 ; 0000 010B }
0002c3 91e9      	LD   R30,Y+
0002c4 bfef      	OUT  SREG,R30
0002c5 91e9      	LD   R30,Y+
0002c6 9518      	RETI
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0110 {   int adcRaw =0;             // ADC µ•¿Ã≈Õ ¿˙¿ÂøÎ
                 _main:
                 ; 0000 0111     float adcmilliVoltage =0;    // ADC µ•¿Ã≈Õ∏¶ ¿¸æ–¿∏∑Œ ∫Ø»Ø«— µ•¿Ã≈Õ ¿˙¿ÂøÎ
                 ; 0000 0112     float Celsius = 0;          // ∞ËªÍµ» ø¬µµ ¿˙¿ÂøÎ
                 ; 0000 0113     float Celsius_vec[num];//∞™∆¢¥¬∞≈ πÊ¡ˆ 10∞≥ πËø≠ ∫Øºˆ
                 ; 0000 0114     float Celsius_vec_temp;
                 ; 0000 0115     float Celsius_median=0;//10∞≥¡ﬂ 5π¯¬∞ ∞™ ¿˙¿Â «œ¥¬ ∫Øºˆ
                 ; 0000 0116     float open_close_Celsius=0;
                 ; 0000 0117     float control_celsius=0;//ø¬µµ¡ˆ¡§Ω∫¿ßƒ°∏¶ ¿ß«— ∫Øºˆ
                 ; 0000 0118     int jk=0;
                 ; 0000 0119     int jj=0;
                 ; 0000 011A     char Sonar_addr = 0xE0; // √¯¡§«œ∞Ì¿⁄ «œ¥¬ ¿Âƒ° ¡÷º“
                 ; 0000 011B     unsigned int Sonar_range; // √¯¡§ ∞≈∏Æ∏¶ ¿˙¿Â«“ ∫Øºˆ
                 ; 0000 011C     char Message[40]; // LCD »≠∏Èø° πÆ¿⁄ø≠ √‚∑¬¿ª ¿ß«— πÆ¿⁄ø≠ ∫Øºˆ
                 ; 0000 011D     char Celsi[40]; // LCD »≠∏Èø° πÆ¿⁄ø≠ √‚∑¬¿ª ¿ß«— πÆ¿⁄ø≠ ∫Øºˆ
                 ; 0000 011E     char control_cel[40]; // LCD »≠∏Èø° πÆ¿⁄ø≠ √‚∑¬¿ª ¿ß«— πÆ¿⁄ø≠ ∫Øºˆ
                 ; 0000 011F     ADC_Init();  // ADC √ ±‚»≠
0002c7 97ef      	SBIW R28,63
0002c8 97ef      	SBIW R28,63
0002c9 97ed      	SBIW R28,61
0002ca e481      	LDI  R24,65
0002cb e7aa      	LDI  R26,LOW(122)
0002cc e0b0      	LDI  R27,HIGH(122)
0002cd eaea      	LDI  R30,LOW(_0x71*2)
0002ce e0f0      	LDI  R31,HIGH(_0x71*2)
0002cf 940e 0ec7 	CALL __INITLOCB
                 ;	adcRaw -> R16,R17
                 ;	adcmilliVoltage -> Y+183
                 ;	Celsius -> Y+179
                 ;	Celsius_vec -> Y+139
                 ;	Celsius_vec_temp -> Y+135
                 ;	Celsius_median -> Y+131
                 ;	open_close_Celsius -> Y+127
                 ;	control_celsius -> Y+123
                 ;	jk -> R18,R19
                 ;	jj -> R20,R21
                 ;	Sonar_addr -> Y+122
                 ;	Sonar_range -> Y+120
                 ;	Message -> Y+80
                 ;	Celsi -> Y+40
                 ;	control_cel -> Y+0
                +
0002d1 e000     +LDI R16 , LOW ( 0 )
0002d2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0002d3 e020     +LDI R18 , LOW ( 0 )
0002d4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0002d5 e040     +LDI R20 , LOW ( 0 )
0002d6 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0002d7 ded8      	RCALL _ADC_Init
                 ; 0000 0120     LCD_Init(); // LCD √ ±‚»≠
0002d8 de8a      	RCALL _LCD_Init
                 ; 0000 0121     LCD_Clear();
0002d9 de7d      	RCALL _LCD_Clear
                 ; 0000 0122     Timer0_Init(); // 1ms ∞Ëºˆ ¿ß«— ≈∏¿Ã∏” √ ±‚»≠
0002da dfd7      	RCALL _Timer0_Init
                 ; 0000 0123     I2C_Init(); // I2C ≈ÎΩ≈ √ ±‚»≠( baudrate º≥¡§)
0002db dfb1      	RCALL _I2C_Init
                 ; 0000 0124     delay_ms(1000); // SRF02 ¿¸ø¯ æ»¡§»≠ Ω√∞£ ¥Î±‚
0002dc eee8      	LDI  R30,LOW(1000)
0002dd e0f3      	LDI  R31,HIGH(1000)
0002de 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 0125     SREG|=0x80; // ≈∏¿Ã∏” ¿Œ≈Õ∑¥∆Æ »∞º∫»≠ ¿ß«— ¿¸ø™ ¿Œ≈Õ∑¥∆Æ »∞º∫»≠
0002e0 9478      	BSET 7
                 ; 0000 0126     startRanging(Sonar_addr); // √ ¿Ω∆ƒ ºæº≠ ∞≈∏Æ √¯¡§ Ω√¿€ ∏Ì∑… ()¥¬ 0xE0√¯¡§«œ∞Ì¿⁄ «œ¥¬ ¿Âƒ° ¡÷º“
0002e1 940e 0a54 	CALL SUBOPT_0xA
0002e3 dfad      	RCALL _startRanging
                 ; 0000 0127     ti_Cnt_1ms = 0; // √¯¡§Ω√∞£ ¥Î±‚∏¶ ¿ß«— ∫Øºˆ √ ±‚»≠
0002e4 e0e0      	LDI  R30,LOW(0)
0002e5 93e0 05b5 	STS  _ti_Cnt_1ms,R30
                 ; 0000 0128     Port_init();
0002e7 debd      	RCALL _Port_init
                 ; 0000 0129     FND_init();//fnd √ ±‚∞™ 00
0002e8 deb5      	RCALL _FND_init
                 ; 0000 012A     while(1)
                 _0x72:
                 ; 0000 012B     {   if(flag !=-1){
0002e9 940e 0a5a 	CALL SUBOPT_0xB
0002eb 3faf      	CPI  R26,LOW(0xFFFF)
0002ec efef      	LDI  R30,HIGH(0xFFFF)
0002ed 07be      	CPC  R27,R30
0002ee f411      	BRNE PC+3
0002ef 940c 0389 	JMP _0x75
                 ; 0000 012C         adcRaw     = Read_ADC_Data_Diff(0b1101);    // MUX : 01101 ∫Ø»Ø ø‰√ª
0002f1 e0ed      	LDI  R30,LOW(13)
0002f2 93ea      	ST   -Y,R30
0002f3 dec3      	RCALL _Read_ADC_Data_Diff
0002f4 018f      	MOVW R16,R30
                 ; 0000 012D         // ADC3 : Positive Differential Input
                 ; 0000 012E         // ADC2 : Negative Differential Input
                 ; 0000 012F         // 10x GAIN
                 ; 0000 0130         adcmilliVoltage = ( (( (float)adcRaw * 5000) /512) / 10);
0002f5 01f8      	MOVW R30,R16
0002f6 940e 0a5f 	CALL SUBOPT_0xC
                +
0002f8 e0a0     +LDI R26 , LOW ( 0x459C4000 )
0002f9 e4b0     +LDI R27 , HIGH ( 0x459C4000 )
0002fa e98c     +LDI R24 , BYTE3 ( 0x459C4000 )
0002fb e495     +LDI R25 , BYTE4 ( 0x459C4000 )
                 	__GETD2N 0x459C4000
0002fc 940e 0d2a 	CALL __MULF12
0002fe 01df      	MOVW R26,R30
0002ff 01cb      	MOVW R24,R22
                +
000300 e0e0     +LDI R30 , LOW ( 0x44000000 )
000301 e0f0     +LDI R31 , HIGH ( 0x44000000 )
000302 e060     +LDI R22 , BYTE3 ( 0x44000000 )
000303 e474     +LDI R23 , BYTE4 ( 0x44000000 )
                 	__GETD1N 0x44000000
000304 940e 0d78 	CALL __DIVF21
000306 01df      	MOVW R26,R30
000307 01cb      	MOVW R24,R22
000308 940e 0a64 	CALL SUBOPT_0xD
                +
00030a 01de     +MOVW R26 , R28
00030b 54a9     +SUBI R26 , LOW ( - 183 )
00030c 4fbf     +SBCI R27 , HIGH ( - 183 )
00030d 93ed     +ST X + , R30
00030e 93fd     +ST X + , R31
00030f 936d     +ST X + , R22
000310 937c     +ST X , R23
                 	__PUTD1SX 183
                 ; 0000 0131         // ¿¸æ–¿∏∑Œ ∫Ø»Ø, VREF = 5000 mV, 10πË ¡ı∆¯∫Ò, ¬˜µø∞Ë√¯ ∞Ì∑¡
                 ; 0000 0132         Celsius = adcmilliVoltage  / 10;
000311 940e 0a6b 	CALL SUBOPT_0xE
                +
000313 01de     +MOVW R26 , R28
000314 54ad     +SUBI R26 , LOW ( - 179 )
000315 4fbf     +SBCI R27 , HIGH ( - 179 )
000316 93ed     +ST X + , R30
000317 93fd     +ST X + , R31
000318 936d     +ST X + , R22
000319 937c     +ST X , R23
                 	__PUTD1SX 179
                 ; 0000 0133         if(flag==0){Celsius_vec[0]=Celsius;} //∞™ ∆¢¥¬∞≈ ¿‚±‚ ¿ß«ÿ 10∞≥ πËø≠ø° ≥÷∞Ì ≥ª∏≤¬˜º¯ »ƒ ¡ﬂ∞£∞™ ªÃæ∆
00031a 91e0 05a9 	LDS  R30,_flag
00031c 91f0 05aa 	LDS  R31,_flag+1
00031e 9730      	SBIW R30,0
00031f f479      	BRNE _0x76
                +
000320 01fe     +MOVW R30 , R28
000321 54ed     +SUBI R30 , LOW ( - 179 )
000322 4fff     +SBCI R31 , HIGH ( - 179 )
000323 9001     +LD R0 , Z +
000324 9011     +LD R1 , Z +
000325 9161     +LD R22 , Z +
000326 8170     +LD R23 , Z
000327 01f0     +MOVW R30 , R0
                 	__GETD1SX 179
                +
000328 01de     +MOVW R26 , R28
000329 57a5     +SUBI R26 , LOW ( - 139 )
00032a 4fbf     +SBCI R27 , HIGH ( - 139 )
00032b 93ed     +ST X + , R30
00032c 93fd     +ST X + , R31
00032d 936d     +ST X + , R22
00032e 937c     +ST X , R23
                 	__PUTD1SX 139
                 ; 0000 0134         if(flag==1){Celsius_vec[1]=Celsius;}
                 _0x76:
00032f 940e 0a5a 	CALL SUBOPT_0xB
000331 9711      	SBIW R26,1
000332 f431      	BRNE _0x77
000333 01fe      	MOVW R30,R28
000334 57e5      	SUBI R30,LOW(-(139))
000335 4fff      	SBCI R31,HIGH(-(139))
000336 9634      	ADIW R30,4
000337 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 0135         if(flag==2){Celsius_vec[2]=Celsius;}
                 _0x77:
000339 940e 0a5a 	CALL SUBOPT_0xB
00033b 9712      	SBIW R26,2
00033c f431      	BRNE _0x78
00033d 01fe      	MOVW R30,R28
00033e 57e5      	SUBI R30,LOW(-(139))
00033f 4fff      	SBCI R31,HIGH(-(139))
000340 9638      	ADIW R30,8
000341 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 0136         if(flag==3){Celsius_vec[3]=Celsius;}
                 _0x78:
000343 940e 0a5a 	CALL SUBOPT_0xB
000345 9713      	SBIW R26,3
000346 f431      	BRNE _0x79
000347 01fe      	MOVW R30,R28
000348 57e5      	SUBI R30,LOW(-(139))
000349 4fff      	SBCI R31,HIGH(-(139))
00034a 963c      	ADIW R30,12
00034b 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 0137         if(flag==4){Celsius_vec[4]=Celsius;}
                 _0x79:
00034d 940e 0a5a 	CALL SUBOPT_0xB
00034f 9714      	SBIW R26,4
000350 f431      	BRNE _0x7A
000351 01fe      	MOVW R30,R28
000352 57e5      	SUBI R30,LOW(-(139))
000353 4fff      	SBCI R31,HIGH(-(139))
000354 9670      	ADIW R30,16
000355 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 0138         if(flag==5){Celsius_vec[5]=Celsius;}
                 _0x7A:
000357 940e 0a5a 	CALL SUBOPT_0xB
000359 9715      	SBIW R26,5
00035a f431      	BRNE _0x7B
00035b 01fe      	MOVW R30,R28
00035c 57e5      	SUBI R30,LOW(-(139))
00035d 4fff      	SBCI R31,HIGH(-(139))
00035e 9674      	ADIW R30,20
00035f 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 0139         if(flag==6){Celsius_vec[6]=Celsius;}
                 _0x7B:
000361 940e 0a5a 	CALL SUBOPT_0xB
000363 9716      	SBIW R26,6
000364 f431      	BRNE _0x7C
000365 01fe      	MOVW R30,R28
000366 57e5      	SUBI R30,LOW(-(139))
000367 4fff      	SBCI R31,HIGH(-(139))
000368 9678      	ADIW R30,24
000369 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 013A         if(flag==7){Celsius_vec[7]=Celsius;}
                 _0x7C:
00036b 940e 0a5a 	CALL SUBOPT_0xB
00036d 9717      	SBIW R26,7
00036e f431      	BRNE _0x7D
00036f 01fe      	MOVW R30,R28
000370 57e5      	SUBI R30,LOW(-(139))
000371 4fff      	SBCI R31,HIGH(-(139))
000372 967c      	ADIW R30,28
000373 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 013B         if(flag==8){Celsius_vec[8]=Celsius;}
                 _0x7D:
000375 940e 0a5a 	CALL SUBOPT_0xB
000377 9718      	SBIW R26,8
000378 f431      	BRNE _0x7E
000379 01fe      	MOVW R30,R28
00037a 57e5      	SUBI R30,LOW(-(139))
00037b 4fff      	SBCI R31,HIGH(-(139))
00037c 96b0      	ADIW R30,32
00037d 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 013C         if(flag==9){Celsius_vec[9]=Celsius;}
                 _0x7E:
00037f 940e 0a5a 	CALL SUBOPT_0xB
000381 9719      	SBIW R26,9
000382 f431      	BRNE _0x7F
000383 01fe      	MOVW R30,R28
000384 57e5      	SUBI R30,LOW(-(139))
000385 4fff      	SBCI R31,HIGH(-(139))
000386 96b4      	ADIW R30,36
000387 940e 0a74 	CALL SUBOPT_0xF
                 ; 0000 013D         }
                 _0x7F:
                 ; 0000 013E 
                 ; 0000 013F         for(jk=0;jk<num-1;jk++){       //≥ª∏≤¬˜º¯
                 _0x75:
                +
000389 e020     +LDI R18 , LOW ( 0 )
00038a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x81:
                +
00038b 3029     +CPI R18 , LOW ( 9 )
00038c e0e0     +LDI R30 , HIGH ( 9 )
00038d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,9
00038e f5dc      	BRGE _0x82
                 ; 0000 0140             for(jj=jk+1;jj<num;jj++){
00038f 01f9      	MOVW R30,R18
000390 9631      	ADIW R30,1
000391 01af      	MOVW R20,R30
                 _0x84:
                +
000392 304a     +CPI R20 , LOW ( 10 )
000393 e0e0     +LDI R30 , HIGH ( 10 )
000394 075e     +CPC R21 , R30
                 	__CPWRN 20,21,10
000395 f58c      	BRGE _0x85
                 ; 0000 0141                 if(Celsius_vec[jk]<Celsius_vec[jj]){
000396 940e 0a7f 	CALL SUBOPT_0x10
000398 937f      	PUSH R23
000399 936f      	PUSH R22
00039a 93ff      	PUSH R31
00039b 93ef      	PUSH R30
00039c 940e 0a8a 	CALL SUBOPT_0x11
00039e 91af      	POP  R26
00039f 91bf      	POP  R27
0003a0 918f      	POP  R24
0003a1 919f      	POP  R25
0003a2 940e 0dbd 	CALL __CMPF12
0003a4 f4f8      	BRSH _0x86
                 ; 0000 0142                     Celsius_vec_temp=Celsius_vec[jj];
0003a5 940e 0a8a 	CALL SUBOPT_0x11
                +
0003a7 01de     +MOVW R26 , R28
0003a8 57a9     +SUBI R26 , LOW ( - 135 )
0003a9 4fbf     +SBCI R27 , HIGH ( - 135 )
0003aa 93ed     +ST X + , R30
0003ab 93fd     +ST X + , R31
0003ac 936d     +ST X + , R22
0003ad 937c     +ST X , R23
                 	__PUTD1SX 135
                 ; 0000 0143                     Celsius_vec[jj]=Celsius_vec[jk];
0003ae 01fa      	MOVW R30,R20
0003af 940e 0a95 	CALL SUBOPT_0x12
0003b1 010f      	MOVW R0,R30
0003b2 940e 0a7f 	CALL SUBOPT_0x10
0003b4 01d0      	MOVW R26,R0
0003b5 940e 0e8f 	CALL __PUTDP1
                 ; 0000 0144                     Celsius_vec[jk]=Celsius_vec_temp;
0003b7 01f9      	MOVW R30,R18
0003b8 940e 0a95 	CALL SUBOPT_0x12
                +
0003ba 01de     +MOVW R26 , R28
0003bb 57a9     +SUBI R26 , LOW ( - 135 )
0003bc 4fbf     +SBCI R27 , HIGH ( - 135 )
0003bd 900d     +LD R0 , X +
0003be 901d     +LD R1 , X +
0003bf 918d     +LD R24 , X +
0003c0 919c     +LD R25 , X
0003c1 01d0     +MOVW R26 , R0
                 	__GETD2SX 135
0003c2 940e 0e9e 	CALL __PUTDZ20
                 ; 0000 0145                 }
                 ; 0000 0146             }
                 _0x86:
                +
0003c4 5f4f     +SUBI R20 , LOW ( - 1 )
0003c5 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0003c6 cfcb      	RJMP _0x84
                 _0x85:
                 ; 0000 0147         }
                +
0003c7 5f2f     +SUBI R18 , LOW ( - 1 )
0003c8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0003c9 cfc1      	RJMP _0x81
                 _0x82:
                 ; 0000 0148 
                 ; 0000 0149         if(flag>10){
0003ca 940e 0a5a 	CALL SUBOPT_0xB
0003cc 971b      	SBIW R26,11
0003cd f13c      	BRLT _0x87
                 ; 0000 014A         Celsius_median=Celsius_vec[num/2];
                +
0003ce 01fe     +MOVW R30 , R28
0003cf 56e1     +SUBI R30 , LOW ( - 159 )
0003d0 4fff     +SBCI R31 , HIGH ( - 159 )
0003d1 9001     +LD R0 , Z +
0003d2 9011     +LD R1 , Z +
0003d3 9161     +LD R22 , Z +
0003d4 8170     +LD R23 , Z
0003d5 01f0     +MOVW R30 , R0
                 	__GETD1SX 159
                +
0003d6 01de     +MOVW R26 , R28
0003d7 57ad     +SUBI R26 , LOW ( - 131 )
0003d8 4fbf     +SBCI R27 , HIGH ( - 131 )
0003d9 93ed     +ST X + , R30
0003da 93fd     +ST X + , R31
0003db 936d     +ST X + , R22
0003dc 937c     +ST X , R23
                 	__PUTD1SX 131
                 ; 0000 014B             if(flag2==11){
0003dd 940e 0a9d 	CALL SUBOPT_0x13
0003df 971b      	SBIW R26,11
0003e0 f479      	BRNE _0x88
                 ; 0000 014C             open_close_Celsius=Celsius_median;
                +
0003e1 01fe     +MOVW R30 , R28
0003e2 57ed     +SUBI R30 , LOW ( - 131 )
0003e3 4fff     +SBCI R31 , HIGH ( - 131 )
0003e4 9001     +LD R0 , Z +
0003e5 9011     +LD R1 , Z +
0003e6 9161     +LD R22 , Z +
0003e7 8170     +LD R23 , Z
0003e8 01f0     +MOVW R30 , R0
                 	__GETD1SX 131
                +
0003e9 01de     +MOVW R26 , R28
0003ea 58a1     +SUBI R26 , LOW ( - 127 )
0003eb 4fbf     +SBCI R27 , HIGH ( - 127 )
0003ec 93ed     +ST X + , R30
0003ed 93fd     +ST X + , R31
0003ee 936d     +ST X + , R22
0003ef 937c     +ST X , R23
                 	__PUTD1SX 127
                 ; 0000 014D             }
                 ; 0000 014E         flag=0;
                 _0x88:
0003f0 e0e0      	LDI  R30,LOW(0)
0003f1 93e0 05a9 	STS  _flag,R30
0003f3 93e0 05aa 	STS  _flag+1,R30
                 ; 0000 014F         }
                 ; 0000 0150         sprintf(Celsi,"%2.2f",Celsius_median);      //10π¯ ¡ﬂ 5π¯§ä µ≈√∆Æ ≥ª∏≤¬˜º¯ ¡§∏Æ
                 _0x87:
0003f5 940e 0aa2 	CALL SUBOPT_0x14
0003f7 940e 0aa7 	CALL SUBOPT_0x15
                +
0003f9 01fe     +MOVW R30 , R28
0003fa 57e9     +SUBI R30 , LOW ( - 135 )
0003fb 4fff     +SBCI R31 , HIGH ( - 135 )
0003fc 9001     +LD R0 , Z +
0003fd 9011     +LD R1 , Z +
0003fe 9161     +LD R22 , Z +
0003ff 8170     +LD R23 , Z
000400 01f0     +MOVW R30 , R0
                 	__GETD1SX 135
000401 940e 0aac 	CALL SUBOPT_0x16
                 ; 0000 0151         /////////////////////////////////////////////////////////////////
                 ; 0000 0152         //ø¬µµ ¡ˆ¡§ ∞˙¡§
                 ; 0000 0153          if(PIND.5 == 0) {
000403 9985      	SBIC 0x10,5
000404 c034      	RJMP _0x89
                 ; 0000 0154             delay_ms(20);
000405 940e 0ab3 	CALL SUBOPT_0x17
                 ; 0000 0155             control_celsius=adcmilliVoltage  / 10;
000407 940e 0a6b 	CALL SUBOPT_0xE
000409 940e 0ab6 	CALL SUBOPT_0x18
                 ; 0000 0156             delay_ms(500);
00040b efe4      	LDI  R30,LOW(500)
00040c e0f1      	LDI  R31,HIGH(500)
00040d 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 0157             FND_MATCH(control_celsius);
00040f 940e 0abe 	CALL SUBOPT_0x19
000411 940e 0ac7 	CALL SUBOPT_0x1A
                 ; 0000 0158             LCD_Clear();
000413 dd43      	RCALL _LCD_Clear
                 ; 0000 0159             sprintf(control_cel,"%2.2f",control_celsius);
000414 940e 0acd 	CALL SUBOPT_0x1B
000416 940e 0aa7 	CALL SUBOPT_0x15
000418 940e 0ad1 	CALL SUBOPT_0x1C
                 ; 0000 015A             LCD_Pos(0,0);
00041a 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 015B             LCD_Str("Celsius Change" );
                +
00041c e0e0     +LDI R30 , LOW ( _0x8A + ( 0 ) )
00041d e0f5     +LDI R31 , HIGH ( _0x8A + ( 0 ) )
                 	__POINTW1MN _0x8A,0
00041e 940e 0adf 	CALL SUBOPT_0x1E
                 ; 0000 015C             LCD_Pos(1,0);
                 ; 0000 015D             LCD_Str(control_cel);
000420 dd1e      	RCALL _LCD_Str
                 ; 0000 015E             k1++;
000421 eba3      	LDI  R26,LOW(_k1)
000422 e0b5      	LDI  R27,HIGH(_k1)
000423 940e 0aea 	CALL SUBOPT_0x1F
                 ; 0000 015F             while(1) {
                 _0x8B:
                 ; 0000 0160                 if(PIND.5 == 1) {
000425 9b85      	SBIS 0x10,5
000426 c011      	RJMP _0x8E
                 ; 0000 0161                   k++;
000427 eaad      	LDI  R26,LOW(_k)
000428 e0b5      	LDI  R27,HIGH(_k)
000429 940e 0aea 	CALL SUBOPT_0x1F
00042b 9731      	SBIW R30,1
                 ; 0000 0162                     if(k>=2)k = 0;
00042c 91a0 05ad 	LDS  R26,_k
00042e 91b0 05ae 	LDS  R27,_k+1
000430 9712      	SBIW R26,2
000431 f02c      	BRLT _0x8F
000432 e0e0      	LDI  R30,LOW(0)
000433 93e0 05ad 	STS  _k,R30
000435 93e0 05ae 	STS  _k+1,R30
                 ; 0000 0163                     break;
                 _0x8F:
000437 c001      	RJMP _0x8D
                 ; 0000 0164                 }
                 ; 0000 0165            }
                 _0x8E:
000438 cfec      	RJMP _0x8B
                 _0x8D:
                 ; 0000 0166          }
                 ; 0000 0167        /////////////////////////////////////////////////////////////////
                 ; 0000 0168        //ø¬µµ up
                 ; 0000 0169         if(k==1){
                 _0x89:
000439 91a0 05ad 	LDS  R26,_k
00043b 91b0 05ae 	LDS  R27,_k+1
00043d 9711      	SBIW R26,1
00043e f011      	BREQ PC+3
00043f 940c 04a8 	JMP _0x90
                 ; 0000 016A 
                 ; 0000 016B         while(1){
                 _0x91:
                 ; 0000 016C 
                 ; 0000 016D             if(PIND.3 == 0) {
000441 9983      	SBIC 0x10,3
000442 c02d      	RJMP _0x94
                 ; 0000 016E                 delay_ms(20);
000443 940e 0ab3 	CALL SUBOPT_0x17
                 ; 0000 016F                 LCD_Clear();
000445 940e 0af0 	CALL SUBOPT_0x20
                 ; 0000 0170                 control_celsius+=1;
000447 940e 0cda 	CALL __ADDF12
000449 940e 0ab6 	CALL SUBOPT_0x18
                 ; 0000 0171                 sprintf(control_cel,"%2.2f",control_celsius);
00044b 940e 0acd 	CALL SUBOPT_0x1B
00044d 940e 0aa7 	CALL SUBOPT_0x15
00044f 940e 0ad1 	CALL SUBOPT_0x1C
                 ; 0000 0172                 FND_MATCH(control_celsius);
000451 940e 0abe 	CALL SUBOPT_0x19
000453 940e 0ac7 	CALL SUBOPT_0x1A
                 ; 0000 0173                 LCD_Pos(0,0);
000455 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 0174                 LCD_Str("Celsius Change" );
                +
000457 e0ef     +LDI R30 , LOW ( _0x8A + ( 15 ) )
000458 e0f5     +LDI R31 , HIGH ( _0x8A + ( 15 ) )
                 	__POINTW1MN _0x8A,15
000459 940e 0adf 	CALL SUBOPT_0x1E
                 ; 0000 0175                 LCD_Pos(1,0);
                 ; 0000 0176                 LCD_Str(control_cel);
00045b dce3      	RCALL _LCD_Str
                 ; 0000 0177                 while(1) {
                 _0x95:
                 ; 0000 0178                     if(PIND.3 == 1) {
00045c 9b83      	SBIS 0x10,3
00045d c011      	RJMP _0x98
                 ; 0000 0179                     b++;
00045e eaaf      	LDI  R26,LOW(_b)
00045f e0b5      	LDI  R27,HIGH(_b)
000460 940e 0aea 	CALL SUBOPT_0x1F
000462 9731      	SBIW R30,1
                 ; 0000 017A                         if(b>=2)b = 0;
000463 91a0 05af 	LDS  R26,_b
000465 91b0 05b0 	LDS  R27,_b+1
000467 9712      	SBIW R26,2
000468 f02c      	BRLT _0x99
000469 e0e0      	LDI  R30,LOW(0)
00046a 93e0 05af 	STS  _b,R30
00046c 93e0 05b0 	STS  _b+1,R30
                 ; 0000 017B                         break;
                 _0x99:
00046e c001      	RJMP _0x97
                 ; 0000 017C                     }
                 ; 0000 017D                 }
                 _0x98:
00046f cfec      	RJMP _0x95
                 _0x97:
                 ; 0000 017E             }
                 ; 0000 017F            ////ø¬µµ down
                 ; 0000 0180             if(PIND.4 == 0) {
                 _0x94:
000470 9984      	SBIC 0x10,4
000471 c02d      	RJMP _0x9A
                 ; 0000 0181                 delay_ms(20);
000472 940e 0ab3 	CALL SUBOPT_0x17
                 ; 0000 0182                 LCD_Clear();
000474 940e 0af0 	CALL SUBOPT_0x20
                 ; 0000 0183                 control_celsius-=1;
000476 940e 0cd3 	CALL __SUBF12
000478 940e 0ab6 	CALL SUBOPT_0x18
                 ; 0000 0184                 sprintf(control_cel,"%2.2f",control_celsius);
00047a 940e 0acd 	CALL SUBOPT_0x1B
00047c 940e 0aa7 	CALL SUBOPT_0x15
00047e 940e 0ad1 	CALL SUBOPT_0x1C
                 ; 0000 0185                 FND_MATCH(control_celsius);
000480 940e 0abe 	CALL SUBOPT_0x19
000482 940e 0ac7 	CALL SUBOPT_0x1A
                 ; 0000 0186                 LCD_Pos(0,0);
000484 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 0187                 LCD_Str("Celsius Change" );
                +
000486 e1ee     +LDI R30 , LOW ( _0x8A + ( 30 ) )
000487 e0f5     +LDI R31 , HIGH ( _0x8A + ( 30 ) )
                 	__POINTW1MN _0x8A,30
000488 940e 0adf 	CALL SUBOPT_0x1E
                 ; 0000 0188                 LCD_Pos(1,0);
                 ; 0000 0189                 LCD_Str(control_cel);
00048a dcb4      	RCALL _LCD_Str
                 ; 0000 018A                 while(1) {
                 _0x9B:
                 ; 0000 018B                     if(PIND.4 == 1) {
00048b 9b84      	SBIS 0x10,4
00048c c011      	RJMP _0x9E
                 ; 0000 018C                        n++;
00048d eba1      	LDI  R26,LOW(_n)
00048e e0b5      	LDI  R27,HIGH(_n)
00048f 940e 0aea 	CALL SUBOPT_0x1F
000491 9731      	SBIW R30,1
                 ; 0000 018D                         if(n>=2)n = 0;
000492 91a0 05b1 	LDS  R26,_n
000494 91b0 05b2 	LDS  R27,_n+1
000496 9712      	SBIW R26,2
000497 f02c      	BRLT _0x9F
000498 e0e0      	LDI  R30,LOW(0)
000499 93e0 05b1 	STS  _n,R30
00049b 93e0 05b2 	STS  _n+1,R30
                 ; 0000 018E                         break;
                 _0x9F:
00049d c001      	RJMP _0x9D
                 ; 0000 018F                     }
                 ; 0000 0190                 }
                 _0x9E:
00049e cfec      	RJMP _0x9B
                 _0x9D:
                 ; 0000 0191             }
                 ; 0000 0192            //ø¬µµ∫Ø»Ø∞˙¡§ ≈ª
                 ; 0000 0193             if(PIND.6==0){k=0;break;}
                 _0x9A:
00049f 9986      	SBIC 0x10,6
0004a0 c006      	RJMP _0xA0
0004a1 e0e0      	LDI  R30,LOW(0)
0004a2 93e0 05ad 	STS  _k,R30
0004a4 93e0 05ae 	STS  _k+1,R30
0004a6 c001      	RJMP _0x93
                 ; 0000 0194         }
                 _0xA0:
0004a7 cf99      	RJMP _0x91
                 _0x93:
                 ; 0000 0195 
                 ; 0000 0196         }
                 ; 0000 0197         /////////////////////////////////////////////////////////////////
                 ; 0000 0198         //¿Œ√º µ≈√∆Æ+¿œ¡§ ∞≈∏Æ æ»ø° µÈæÓø¿∏È open
                 ; 0000 0199         if(flag2>12){
                 _0x90:
0004a8 940e 0a9d 	CALL SUBOPT_0x13
0004aa 971d      	SBIW R26,13
0004ab f414      	BRGE PC+3
0004ac 940c 050c 	JMP _0xA1
                 ; 0000 019A         if(Celsius_median< open_close_Celsius+1){
0004ae 940e 0af8 	CALL SUBOPT_0x21
0004b0 f010      	BRLO PC+3
0004b1 940c 050c 	JMP _0xA2
                 ; 0000 019B         if(PIR_sensor1==1 || PIR_sensor2==1)
0004b3 990d      	SBIC 0x1,5
0004b4 c002      	RJMP _0xA4
0004b5 9b0f      	SBIS 0x1,7
0004b6 c055      	RJMP _0xA3
                 _0xA4:
                 ; 0000 019C         {
                 ; 0000 019D             LCD_Clear();
0004b7 dc9f      	RCALL _LCD_Clear
                 ; 0000 019E             LCD_Pos(0,0);
0004b8 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 019F             LCD_Str("Motion Detect" );
                +
0004ba e2ed     +LDI R30 , LOW ( _0x8A + ( 45 ) )
0004bb e0f5     +LDI R31 , HIGH ( _0x8A + ( 45 ) )
                 	__POINTW1MN _0x8A,45
0004bc 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01A0             if(ti_Cnt_1ms > 66)       //0.066√ ∏∂¥Ÿ Ω««‡
0004be 91a0 05b5 	LDS  R26,_ti_Cnt_1ms
0004c0 34a3      	CPI  R26,LOW(0x43)
0004c1 f410      	BRSH PC+3
0004c2 940c 050c 	JMP _0xA6
                 ; 0000 01A1             {
                 ; 0000 01A2             // √ ¿Ω∆ƒ ºæº≠ ∞≈∏Æ √¯¡§ µ•¿Ã≈Õ æÚ±‚
                 ; 0000 01A3                 Sonar_range = getRange(Sonar_addr);
0004c4 940e 0a54 	CALL SUBOPT_0xA
0004c6 ddd4      	RCALL _getRange
                +
0004c7 01de     +MOVW R26 , R28
0004c8 58a8     +SUBI R26 , LOW ( - 120 )
0004c9 4fbf     +SBCI R27 , HIGH ( - 120 )
0004ca 93ed     +ST X + , R30
0004cb 93fc     +ST X , R31
                 	__PUTW1SX 120
                 ; 0000 01A4             // √¯¡§µ» ∞≈∏Æ LCD »≠∏Èø° √‚∑¬
                 ; 0000 01A5                 sprintf(Message, "%03d cm",Sonar_range);
0004cc 01fe      	MOVW R30,R28
0004cd 5be0      	SUBI R30,LOW(-(80))
0004ce 4fff      	SBCI R31,HIGH(-(80))
0004cf 93fa      	ST   -Y,R31
0004d0 93ea      	ST   -Y,R30
                +
0004d1 e1e9     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0004d2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
0004d3 93fa      	ST   -Y,R31
0004d4 93ea      	ST   -Y,R30
                +
0004d5 01fe     +MOVW R30 , R28
0004d6 58e4     +SUBI R30 , LOW ( - 124 )
0004d7 4fff     +SBCI R31 , HIGH ( - 124 )
0004d8 9001     +LD R0 , Z +
0004d9 81f0     +LD R31 , Z
0004da 2de0     +MOV R30 , R0
                 	__GETW1SX 124
0004db 2766      	CLR  R22
0004dc 2777      	CLR  R23
0004dd 940e 0aac 	CALL SUBOPT_0x16
                 ; 0000 01A6 
                 ; 0000 01A7                 LCD_Pos(1,0);
0004df 940e 0b15 	CALL SUBOPT_0x23
                 ; 0000 01A8                 LCD_Str(Message);
0004e1 01fe      	MOVW R30,R28
0004e2 5be0      	SUBI R30,LOW(-(80))
0004e3 4fff      	SBCI R31,HIGH(-(80))
0004e4 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01A9                 LCD_Pos(1,7);
0004e6 940e 0b1b 	CALL SUBOPT_0x24
                 ; 0000 01AA                 LCD_Str(Celsi);
0004e8 dc56      	RCALL _LCD_Str
                 ; 0000 01AB             // √ ¿Ω∆ƒ ºæº≠ ∞≈∏Æ √¯¡§ Ω√¿€ ∏Ì∑…
                 ; 0000 01AC                 startRanging(Sonar_addr);
0004e9 940e 0a54 	CALL SUBOPT_0xA
0004eb dda5      	RCALL _startRanging
                 ; 0000 01AD             // ¥Î±‚Ω√∞£ √ ±‚»≠
                 ; 0000 01AE                 ti_Cnt_1ms = 0;
0004ec e0e0      	LDI  R30,LOW(0)
0004ed 93e0 05b5 	STS  _ti_Cnt_1ms,R30
                 ; 0000 01AF                 delay_ms(100);
0004ef e6e4      	LDI  R30,LOW(100)
0004f0 e0f0      	LDI  R31,HIGH(100)
0004f1 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 01B0 
                 ; 0000 01B1                 if(Sonar_range<50){
                +
0004f3 01de     +MOVW R26 , R28
0004f4 58a8     +SUBI R26 , LOW ( - 120 )
0004f5 4fbf     +SBCI R27 , HIGH ( - 120 )
0004f6 900d     +LD R0 , X +
0004f7 91bc     +LD R27 , X
0004f8 2da0     +MOV R26 , R0
                 	__GETW2SX 120
0004f9 97d2      	SBIW R26,50
0004fa f488      	BRSH _0xA7
                 ; 0000 01B2                     for(i=0;i<25;i++){servo_motor=1;delay_us(600);servo_motor=0;delay_ms(20);
0004fb 24cc      	CLR  R12
0004fc 24dd      	CLR  R13
                 _0xA9:
0004fd 940e 0b22 	CALL SUBOPT_0x25
0004ff f464      	BRGE _0xAA
000500 940e 0b27 	CALL SUBOPT_0x26
                 ; 0000 01B3                     LCD_Pos(0,0);
000502 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 01B4                     LCD_Str("Open                          ");
                +
000504 e3eb     +LDI R30 , LOW ( _0x8A + ( 59 ) )
000505 e0f5     +LDI R31 , HIGH ( _0x8A + ( 59 ) )
                 	__POINTW1MN _0x8A,59
000506 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01B5                    }
000508 01f6      	MOVW R30,R12
000509 9631      	ADIW R30,1
00050a 016f      	MOVW R12,R30
00050b cff1      	RJMP _0xA9
                 _0xAA:
                 ; 0000 01B6 
                 ; 0000 01B7                 }
                 ; 0000 01B8 
                 ; 0000 01B9              }
                 _0xA7:
                 ; 0000 01BA         }
                 _0xA6:
                 ; 0000 01BB         }
                 _0xA3:
                 ; 0000 01BC         }
                 _0xA2:
                 ; 0000 01BD         //∞≈∏Æ ø£µµÂ πÆ close
                 ; 0000 01BE        if(flag2>12){
                 _0xA1:
00050c 940e 0a9d 	CALL SUBOPT_0x13
00050e 971d      	SBIW R26,13
00050f f1f4      	BRLT _0xAF
                 ; 0000 01BF        if(Celsius_median< open_close_Celsius+1){
000510 940e 0af8 	CALL SUBOPT_0x21
000512 f5d8      	BRSH _0xB0
                 ; 0000 01C0         if(PIR_sensor1==0 && PIR_sensor2==0)
000513 e0a0      	LDI  R26,0
000514 990d      	SBIC 0x1,5
000515 e0a1      	LDI  R26,1
000516 30a0      	CPI  R26,LOW(0x0)
000517 f429      	BRNE _0xB2
000518 e0a0      	LDI  R26,0
000519 990f      	SBIC 0x1,7
00051a e0a1      	LDI  R26,1
00051b 30a0      	CPI  R26,LOW(0x0)
00051c f009      	BREQ _0xB3
                 _0xB2:
00051d c030      	RJMP _0xB1
                 _0xB3:
                 ; 0000 01C1         {
                 ; 0000 01C2            LCD_Clear();
00051e dc38      	RCALL _LCD_Clear
                 ; 0000 01C3            LCD_Pos(0,0);
00051f 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 01C4            LCD_Str("Motion Ended");
                +
000521 e5ea     +LDI R30 , LOW ( _0x8A + ( 90 ) )
000522 e0f5     +LDI R31 , HIGH ( _0x8A + ( 90 ) )
                 	__POINTW1MN _0x8A,90
000523 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01C5            LCD_Pos(1,0);
000525 940e 0b15 	CALL SUBOPT_0x23
                 ; 0000 01C6            LCD_Str("Close");
                +
000527 e6e7     +LDI R30 , LOW ( _0x8A + ( 103 ) )
000528 e0f5     +LDI R31 , HIGH ( _0x8A + ( 103 ) )
                 	__POINTW1MN _0x8A,103
000529 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01C7            LCD_Pos(1,7);
00052b 940e 0b1b 	CALL SUBOPT_0x24
                 ; 0000 01C8            LCD_Str(Celsi);
00052d 940e 0b2e 	CALL SUBOPT_0x27
                 ; 0000 01C9            LCD_Comm(0x0c);
                 ; 0000 01CA            count++;
00052f 01f5      	MOVW R30,R10
000530 9631      	ADIW R30,1
000531 015f      	MOVW R10,R30
                 ; 0000 01CB            delay_ms(100);
000532 e6e4      	LDI  R30,LOW(100)
000533 e0f0      	LDI  R31,HIGH(100)
000534 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 01CC            if(count>=1){
000536 e0e1      	LDI  R30,LOW(1)
000537 e0f0      	LDI  R31,HIGH(1)
000538 16ae      	CP   R10,R30
000539 06bf      	CPC  R11,R31
00053a f09c      	BRLT _0xB4
                 ; 0000 01CD              for(i=0;i<25;i++){servo_motor=1;delay_us(3300);servo_motor=0;delay_ms(20);}count=0;
00053b 24cc      	CLR  R12
00053c 24dd      	CLR  R13
                 _0xB6:
00053d 940e 0b22 	CALL SUBOPT_0x25
00053f f464      	BRGE _0xB7
000540 9a1e      	SBI  0x3,6
                +
000541 e885     +LDI R24 , LOW ( 12165 )
000542 e29f     +LDI R25 , HIGH ( 12165 )
                +__DELAY_USW_LOOP :
000543 9701     +SBIW R24 , 1
000544 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 12165
000545 981e      	CBI  0x3,6
000546 940e 0ab3 	CALL SUBOPT_0x17
000548 01f6      	MOVW R30,R12
000549 9631      	ADIW R30,1
00054a 016f      	MOVW R12,R30
00054b cff1      	RJMP _0xB6
                 _0xB7:
00054c 24aa      	CLR  R10
00054d 24bb      	CLR  R11
                 ; 0000 01CE            }
                 ; 0000 01CF         }
                 _0xB4:
                 ; 0000 01D0        }
                 _0xB1:
                 ; 0000 01D1        }
                 _0xB0:
                 ; 0000 01D2     //ø¬µ∑ ∫Ø»Ø ∞˙¡§ Ω««‡
                 ; 0000 01D3         if(k1>=1){
                 _0xAF:
00054e 91a0 05b3 	LDS  R26,_k1
000550 91b0 05b4 	LDS  R27,_k1+1
000552 9711      	SBIW R26,1
000553 f414      	BRGE PC+3
000554 940c 05a3 	JMP _0xBC
                 ; 0000 01D4             if(control_celsius> open_close_Celsius ){
                +
000556 01fe     +MOVW R30 , R28
000557 58e1     +SUBI R30 , LOW ( - 127 )
000558 4fff     +SBCI R31 , HIGH ( - 127 )
000559 9001     +LD R0 , Z +
00055a 9011     +LD R1 , Z +
00055b 9161     +LD R22 , Z +
00055c 8170     +LD R23 , Z
00055d 01f0     +MOVW R30 , R0
                 	__GETD1SX 127
                +
00055e 01de     +MOVW R26 , R28
00055f 58a5     +SUBI R26 , LOW ( - 123 )
000560 4fbf     +SBCI R27 , HIGH ( - 123 )
000561 900d     +LD R0 , X +
000562 901d     +LD R1 , X +
000563 918d     +LD R24 , X +
000564 919c     +LD R25 , X
000565 01d0     +MOVW R26 , R0
                 	__GETD2SX 123
000566 940e 0dbd 	CALL __CMPF12
000568 f009      	BREQ PC+2
000569 f410      	BRCC PC+3
00056a 940c 05a3 	JMP  _0xBD
                 ; 0000 01D5                 if(Celsius_median>=control_celsius) {
00056c 940e 0abe 	CALL SUBOPT_0x19
                +
00056e 01de     +MOVW R26 , R28
00056f 57ad     +SUBI R26 , LOW ( - 131 )
000570 4fbf     +SBCI R27 , HIGH ( - 131 )
000571 900d     +LD R0 , X +
000572 901d     +LD R1 , X +
000573 918d     +LD R24 , X +
000574 919c     +LD R25 , X
000575 01d0     +MOVW R26 , R0
                 	__GETD2SX 131
000576 940e 0dbd 	CALL __CMPF12
000578 f150      	BRLO _0xBE
                 ; 0000 01D6 
                 ; 0000 01D7                 LCD_Clear();
000579 dbdd      	RCALL _LCD_Clear
                 ; 0000 01D8                 delay_ms(30);
00057a e1ee      	LDI  R30,LOW(30)
00057b e0f0      	LDI  R31,HIGH(30)
00057c 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 01D9                 LCD_Pos(0,0);
00057e 940e 0ada 	CALL SUBOPT_0x1D
                 ; 0000 01DA                 LCD_Str("Cooling heat                 ");
                +
000580 e6ed     +LDI R30 , LOW ( _0x8A + ( 109 ) )
000581 e0f5     +LDI R31 , HIGH ( _0x8A + ( 109 ) )
                 	__POINTW1MN _0x8A,109
000582 940e 0b11 	CALL SUBOPT_0x22
                 ; 0000 01DB                 LCD_Pos(1,0);
000584 940e 0b15 	CALL SUBOPT_0x23
                 ; 0000 01DC                 LCD_Str(Celsi);
000586 940e 0aa2 	CALL SUBOPT_0x14
000588 940e 0b2e 	CALL SUBOPT_0x27
                 ; 0000 01DD                 LCD_Comm(0x0c);
                 ; 0000 01DE                 for(i=0;i<25;i++){servo_motor=1;delay_us(600);servo_motor=0;delay_ms(20);}
00058a 24cc      	CLR  R12
00058b 24dd      	CLR  R13
                 _0xC0:
00058c 940e 0b22 	CALL SUBOPT_0x25
00058e f434      	BRGE _0xC1
00058f 940e 0b27 	CALL SUBOPT_0x26
000591 01f6      	MOVW R30,R12
000592 9631      	ADIW R30,1
000593 016f      	MOVW R12,R30
000594 cff7      	RJMP _0xC0
                 _0xC1:
                 ; 0000 01DF                 delay_ms(30);
000595 e1ee      	LDI  R30,LOW(30)
000596 e0f0      	LDI  R31,HIGH(30)
000597 940e 0a1c 	CALL SUBOPT_0x2
                 ; 0000 01E0                 if(PIND.7==0){Celsius_median=0;}
000599 9987      	SBIC 0x10,7
00059a c008      	RJMP _0xC6
00059b e0e0      	LDI  R30,LOW(0)
                +
00059c 01de     +MOVW R26 , R28
00059d 57ad     +SUBI R26 , LOW ( - 131 )
00059e 4fbf     +SBCI R27 , HIGH ( - 131 )
00059f 93ed     +ST X + , R30
0005a0 93ed     +ST X + , R30
0005a1 93ed     +ST X + , R30
0005a2 93ec     +ST X , R30
                 	__CLRD1SX 131
                 ; 0000 01E1 
                 ; 0000 01E2                 }
                 _0xC6:
                 ; 0000 01E3             }
                 _0xBE:
                 ; 0000 01E4         }
                 _0xBD:
                 ; 0000 01E5     }
                 _0xBC:
0005a3 cd45      	RJMP _0x72
                 ; 0000 01E6     }
                 _0xC7:
0005a4 cfff      	RJMP _0xC7
                 
                 	.DSEG
                 _0x8A:
000500           	.BYTE 0x8B
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0005a5 931a      	ST   -Y,R17
0005a6 930a      	ST   -Y,R16
0005a7 81aa      	LDD  R26,Y+2
0005a8 81bb      	LDD  R27,Y+2+1
0005a9 9612      	ADIW R26,2
0005aa 940e 0e85 	CALL __GETW1P
0005ac 9730      	SBIW R30,0
0005ad f129      	BREQ _0x2000010
0005ae 81aa      	LDD  R26,Y+2
0005af 81bb      	LDD  R27,Y+2+1
0005b0 9614      	ADIW R26,4
0005b1 940e 0e85 	CALL __GETW1P
0005b3 018f      	MOVW R16,R30
0005b4 9730      	SBIW R30,0
0005b5 f061      	BREQ _0x2000012
                +
0005b6 3002     +CPI R16 , LOW ( 2 )
0005b7 e0e0     +LDI R30 , HIGH ( 2 )
0005b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0005b9 f0c0      	BRLO _0x2000013
0005ba 01f8      	MOVW R30,R16
0005bb 9731      	SBIW R30,1
0005bc 018f      	MOVW R16,R30
                +
0005bd 81aa     +LDD R26 , Y + 2
0005be 81bb     +LDD R27 , Y + 2 + 1
0005bf 9614     +ADIW R26 , 4
0005c0 93ed     +ST X + , R30
0005c1 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0005c2 81aa      	LDD  R26,Y+2
0005c3 81bb      	LDD  R27,Y+2+1
0005c4 9612      	ADIW R26,2
0005c5 940e 0aea 	CALL SUBOPT_0x1F
0005c7 9731      	SBIW R30,1
0005c8 81ac      	LDD  R26,Y+4
0005c9 83a0      	STD  Z+0,R26
0005ca 81aa      	LDD  R26,Y+2
0005cb 81bb      	LDD  R27,Y+2+1
0005cc 940e 0e85 	CALL __GETW1P
0005ce 23ff      	TST  R31
0005cf f012      	BRMI _0x2000014
0005d0 940e 0aea 	CALL SUBOPT_0x1F
                 _0x2000014:
                 _0x2000013:
0005d2 c006      	RJMP _0x2000015
                 _0x2000010:
0005d3 81aa      	LDD  R26,Y+2
0005d4 81bb      	LDD  R27,Y+2+1
0005d5 efef      	LDI  R30,LOW(65535)
0005d6 efff      	LDI  R31,HIGH(65535)
0005d7 93ed      	ST   X+,R30
0005d8 93fc      	ST   X,R31
                 _0x2000015:
                 _0x20A0006:
0005d9 8119      	LDD  R17,Y+1
0005da 8108      	LDD  R16,Y+0
0005db 9625      	ADIW R28,5
0005dc 9508      	RET
                 __ftoe_G100:
0005dd 9724      	SBIW R28,4
0005de e0e0      	LDI  R30,LOW(0)
0005df 83e8      	ST   Y,R30
0005e0 83e9      	STD  Y+1,R30
0005e1 e8e0      	LDI  R30,LOW(128)
0005e2 83ea      	STD  Y+2,R30
0005e3 e3ef      	LDI  R30,LOW(63)
0005e4 83eb      	STD  Y+3,R30
0005e5 940e 0ebb 	CALL __SAVELOCR4
0005e7 85ee      	LDD  R30,Y+14
0005e8 85ff      	LDD  R31,Y+14+1
0005e9 3fef      	CPI  R30,LOW(0xFFFF)
0005ea efaf      	LDI  R26,HIGH(0xFFFF)
0005eb 07fa      	CPC  R31,R26
0005ec f449      	BRNE _0x2000019
0005ed 85e8      	LDD  R30,Y+8
0005ee 85f9      	LDD  R31,Y+8+1
0005ef 93fa      	ST   -Y,R31
0005f0 93ea      	ST   -Y,R30
                +
0005f1 e7e2     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
0005f2 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
0005f3 940e 0b34 	CALL SUBOPT_0x28
0005f5 c0b8      	RJMP _0x20A0005
                 _0x2000019:
0005f6 3fef      	CPI  R30,LOW(0x7FFF)
0005f7 e7af      	LDI  R26,HIGH(0x7FFF)
0005f8 07fa      	CPC  R31,R26
0005f9 f449      	BRNE _0x2000018
0005fa 85e8      	LDD  R30,Y+8
0005fb 85f9      	LDD  R31,Y+8+1
0005fc 93fa      	ST   -Y,R31
0005fd 93ea      	ST   -Y,R30
                +
0005fe e7e3     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0005ff e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000600 940e 0b34 	CALL SUBOPT_0x28
000602 c0ab      	RJMP _0x20A0005
                 _0x2000018:
000603 85ab      	LDD  R26,Y+11
000604 30a7      	CPI  R26,LOW(0x7)
000605 f010      	BRLO _0x200001B
000606 e0e6      	LDI  R30,LOW(6)
000607 87eb      	STD  Y+11,R30
                 _0x200001B:
000608 851b      	LDD  R17,Y+11
                 _0x200001C:
000609 2fe1      	MOV  R30,R17
00060a 5011      	SUBI R17,1
00060b 30e0      	CPI  R30,0
00060c f019      	BREQ _0x200001E
00060d 940e 0b38 	CALL SUBOPT_0x29
00060f cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000610 85ec     +LDD R30 , Y + 12
000611 85fd     +LDD R31 , Y + 12 + 1
000612 856e     +LDD R22 , Y + 12 + 2
000613 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000614 940e 0eb5 	CALL __CPD10
000616 f421      	BRNE _0x200001F
000617 e030      	LDI  R19,LOW(0)
000618 940e 0b38 	CALL SUBOPT_0x29
00061a c02e      	RJMP _0x2000020
                 _0x200001F:
00061b 853b      	LDD  R19,Y+11
00061c 940e 0b47 	CALL SUBOPT_0x2A
00061e f009      	BREQ PC+2
00061f f410      	BRCC PC+3
000620 940c 062d 	JMP  _0x2000021
000622 940e 0b38 	CALL SUBOPT_0x29
                 _0x2000022:
000624 940e 0b47 	CALL SUBOPT_0x2A
000626 f028      	BRLO _0x2000024
000627 940e 0b52 	CALL SUBOPT_0x2B
000629 940e 0b57 	CALL SUBOPT_0x2C
00062b cff8      	RJMP _0x2000022
                 _0x2000024:
00062c c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00062d 940e 0b47 	CALL SUBOPT_0x2A
00062f f440      	BRSH _0x2000028
000630 940e 0b52 	CALL SUBOPT_0x2B
000632 940e 0b63 	CALL SUBOPT_0x2D
000634 940e 0b6a 	CALL SUBOPT_0x2E
000636 5031      	SUBI R19,LOW(1)
000637 cff5      	RJMP _0x2000026
                 _0x2000028:
000638 940e 0b38 	CALL SUBOPT_0x29
                 _0x2000025:
                +
00063a 85ec     +LDD R30 , Y + 12
00063b 85fd     +LDD R31 , Y + 12 + 1
00063c 856e     +LDD R22 , Y + 12 + 2
00063d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00063e 940e 0b6f 	CALL SUBOPT_0x2F
000640 940e 0b6a 	CALL SUBOPT_0x2E
000642 940e 0b47 	CALL SUBOPT_0x2A
000644 f020      	BRLO _0x2000029
000645 940e 0b52 	CALL SUBOPT_0x2B
000647 940e 0b57 	CALL SUBOPT_0x2C
                 _0x2000029:
                 _0x2000020:
000649 e010      	LDI  R17,LOW(0)
                 _0x200002A:
00064a 85eb      	LDD  R30,Y+11
00064b 17e1      	CP   R30,R17
00064c f1a8      	BRLO _0x200002C
                +
00064d 81ac     +LDD R26 , Y + 4
00064e 81bd     +LDD R27 , Y + 4 + 1
00064f 818e     +LDD R24 , Y + 4 + 2
000650 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000651 940e 0b76 	CALL SUBOPT_0x30
000653 940e 0b6f 	CALL SUBOPT_0x2F
000655 940e 0ea3 	CALL __PUTPARD1
000657 940e 0955 	CALL _floor
                +
000659 83ec     +STD Y + 4 , R30
00065a 83fd     +STD Y + 4 + 1 , R31
00065b 836e     +STD Y + 4 + 2 , R22
00065c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00065d 940e 0b52 	CALL SUBOPT_0x2B
00065f 940e 0d78 	CALL __DIVF21
000661 940e 0c67 	CALL __CFD1U
000663 2f0e      	MOV  R16,R30
000664 940e 0b7d 	CALL SUBOPT_0x31
000666 940e 0b84 	CALL SUBOPT_0x32
000668 27ff      	CLR  R31
000669 2766      	CLR  R22
00066a 2777      	CLR  R23
00066b 940e 0ca0 	CALL __CDF1
                +
00066d 81ac     +LDD R26 , Y + 4
00066e 81bd     +LDD R27 , Y + 4 + 1
00066f 818e     +LDD R24 , Y + 4 + 2
000670 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000671 940e 0d2a 	CALL __MULF12
000673 940e 0b52 	CALL SUBOPT_0x2B
000675 940e 0b89 	CALL SUBOPT_0x33
000677 940e 0b6a 	CALL SUBOPT_0x2E
000679 2fe1      	MOV  R30,R17
00067a 5f1f      	SUBI R17,-1
00067b 30e0      	CPI  R30,0
00067c f669      	BRNE _0x200002A
00067d 940e 0b7d 	CALL SUBOPT_0x31
00067f e2ee      	LDI  R30,LOW(46)
000680 93ec      	ST   X,R30
000681 cfc8      	RJMP _0x200002A
                 _0x200002C:
000682 940e 0b8e 	CALL SUBOPT_0x34
000684 9731      	SBIW R30,1
000685 85aa      	LDD  R26,Y+10
000686 83a0      	STD  Z+0,R26
000687 3030      	CPI  R19,0
000688 f42c      	BRGE _0x200002E
000689 9531      	NEG  R19
00068a 85a8      	LDD  R26,Y+8
00068b 85b9      	LDD  R27,Y+8+1
00068c e2ed      	LDI  R30,LOW(45)
00068d c003      	RJMP _0x200010E
                 _0x200002E:
00068e 85a8      	LDD  R26,Y+8
00068f 85b9      	LDD  R27,Y+8+1
000690 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000691 93ec      	ST   X,R30
000692 940e 0b8e 	CALL SUBOPT_0x34
000694 940e 0b8e 	CALL SUBOPT_0x34
000696 9731      	SBIW R30,1
000697 01bf      	MOVW R22,R30
000698 2fa3      	MOV  R26,R19
000699 e0ea      	LDI  R30,LOW(10)
00069a 940e 0e0b 	CALL __DIVB21
00069c 5de0      	SUBI R30,-LOW(48)
00069d 01db      	MOVW R26,R22
00069e 93ec      	ST   X,R30
00069f 940e 0b8e 	CALL SUBOPT_0x34
0006a1 9731      	SBIW R30,1
0006a2 01bf      	MOVW R22,R30
0006a3 2fa3      	MOV  R26,R19
0006a4 e0ea      	LDI  R30,LOW(10)
0006a5 940e 0e4d 	CALL __MODB21
0006a7 5de0      	SUBI R30,-LOW(48)
0006a8 01db      	MOVW R26,R22
0006a9 93ec      	ST   X,R30
0006aa 85a8      	LDD  R26,Y+8
0006ab 85b9      	LDD  R27,Y+8+1
0006ac e0e0      	LDI  R30,LOW(0)
0006ad 93ec      	ST   X,R30
                 _0x20A0005:
0006ae 940e 0ec2 	CALL __LOADLOCR4
0006b0 9660      	ADIW R28,16
0006b1 9508      	RET
                 __print_G100:
0006b2 97ef      	SBIW R28,63
0006b3 9761      	SBIW R28,17
0006b4 940e 0eb9 	CALL __SAVELOCR6
0006b6 e010      	LDI  R17,0
                +
0006b7 01fe     +MOVW R30 , R28
0006b8 5ae8     +SUBI R30 , LOW ( - 88 )
0006b9 4fff     +SBCI R31 , HIGH ( - 88 )
0006ba 9001     +LD R0 , Z +
0006bb 81f0     +LD R31 , Z
0006bc 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0006bd 87e8      	STD  Y+8,R30
0006be 87f9      	STD  Y+8+1,R31
                +
0006bf 01fe     +MOVW R30 , R28
0006c0 5aea     +SUBI R30 , LOW ( - 86 )
0006c1 4fff     +SBCI R31 , HIGH ( - 86 )
0006c2 9001     +LD R0 , Z +
0006c3 81f0     +LD R31 , Z
0006c4 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0006c5 83ee      	STD  Y+6,R30
0006c6 83ff      	STD  Y+6+1,R31
0006c7 81ae      	LDD  R26,Y+6
0006c8 81bf      	LDD  R27,Y+6+1
0006c9 e0e0      	LDI  R30,LOW(0)
0006ca e0f0      	LDI  R31,HIGH(0)
0006cb 93ed      	ST   X+,R30
0006cc 93fc      	ST   X,R31
                 _0x2000030:
0006cd 01de      	MOVW R26,R28
0006ce 5aa4      	SUBI R26,LOW(-(92))
0006cf 4fbf      	SBCI R27,HIGH(-(92))
0006d0 940e 0aea 	CALL SUBOPT_0x1F
0006d2 9731      	SBIW R30,1
0006d3 91e4      	LPM  R30,Z
0006d4 2f2e      	MOV  R18,R30
0006d5 30e0      	CPI  R30,0
0006d6 f411      	BRNE PC+3
0006d7 940c 08c7 	JMP _0x2000032
0006d9 2fe1      	MOV  R30,R17
0006da 30e0      	CPI  R30,0
0006db f439      	BRNE _0x2000036
0006dc 3225      	CPI  R18,37
0006dd f411      	BRNE _0x2000037
0006de e011      	LDI  R17,LOW(1)
0006df c002      	RJMP _0x2000038
                 _0x2000037:
0006e0 940e 0b94 	CALL SUBOPT_0x35
                 _0x2000038:
0006e2 c1e3      	RJMP _0x2000035
                 _0x2000036:
0006e3 30e1      	CPI  R30,LOW(0x1)
0006e4 f4c1      	BRNE _0x2000039
0006e5 3225      	CPI  R18,37
0006e6 f419      	BRNE _0x200003A
0006e7 940e 0b94 	CALL SUBOPT_0x35
0006e9 c1db      	RJMP _0x200010F
                 _0x200003A:
0006ea e012      	LDI  R17,LOW(2)
0006eb e0e0      	LDI  R30,LOW(0)
0006ec 8bed      	STD  Y+21,R30
0006ed e000      	LDI  R16,LOW(0)
0006ee 322d      	CPI  R18,45
0006ef f411      	BRNE _0x200003B
0006f0 e001      	LDI  R16,LOW(1)
0006f1 c1d4      	RJMP _0x2000035
                 _0x200003B:
0006f2 322b      	CPI  R18,43
0006f3 f419      	BRNE _0x200003C
0006f4 e2eb      	LDI  R30,LOW(43)
0006f5 8bed      	STD  Y+21,R30
0006f6 c1cf      	RJMP _0x2000035
                 _0x200003C:
0006f7 3220      	CPI  R18,32
0006f8 f419      	BRNE _0x200003D
0006f9 e2e0      	LDI  R30,LOW(32)
0006fa 8bed      	STD  Y+21,R30
0006fb c1ca      	RJMP _0x2000035
                 _0x200003D:
0006fc c002      	RJMP _0x200003E
                 _0x2000039:
0006fd 30e2      	CPI  R30,LOW(0x2)
0006fe f439      	BRNE _0x200003F
                 _0x200003E:
0006ff e050      	LDI  R21,LOW(0)
000700 e013      	LDI  R17,LOW(3)
000701 3320      	CPI  R18,48
000702 f411      	BRNE _0x2000040
000703 6800      	ORI  R16,LOW(128)
000704 c1c1      	RJMP _0x2000035
                 _0x2000040:
000705 c002      	RJMP _0x2000041
                 _0x200003F:
000706 30e3      	CPI  R30,LOW(0x3)
000707 f491      	BRNE _0x2000042
                 _0x2000041:
000708 3320      	CPI  R18,48
000709 f010      	BRLO _0x2000044
00070a 332a      	CPI  R18,58
00070b f008      	BRLO _0x2000045
                 _0x2000044:
00070c c007      	RJMP _0x2000043
                 _0x2000045:
00070d e0aa      	LDI  R26,LOW(10)
00070e 9f5a      	MUL  R21,R26
00070f 2d50      	MOV  R21,R0
000710 2fe2      	MOV  R30,R18
000711 53e0      	SUBI R30,LOW(48)
000712 0f5e      	ADD  R21,R30
000713 c1b2      	RJMP _0x2000035
                 _0x2000043:
000714 e040      	LDI  R20,LOW(0)
000715 322e      	CPI  R18,46
000716 f411      	BRNE _0x2000046
000717 e014      	LDI  R17,LOW(4)
000718 c1ad      	RJMP _0x2000035
                 _0x2000046:
000719 c00f      	RJMP _0x2000047
                 _0x2000042:
00071a 30e4      	CPI  R30,LOW(0x4)
00071b f499      	BRNE _0x2000049
00071c 3320      	CPI  R18,48
00071d f010      	BRLO _0x200004B
00071e 332a      	CPI  R18,58
00071f f008      	BRLO _0x200004C
                 _0x200004B:
000720 c008      	RJMP _0x200004A
                 _0x200004C:
000721 6200      	ORI  R16,LOW(32)
000722 e0aa      	LDI  R26,LOW(10)
000723 9f4a      	MUL  R20,R26
000724 2d40      	MOV  R20,R0
000725 2fe2      	MOV  R30,R18
000726 53e0      	SUBI R30,LOW(48)
000727 0f4e      	ADD  R20,R30
000728 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000729 362c      	CPI  R18,108
00072a f419      	BRNE _0x200004D
00072b 6002      	ORI  R16,LOW(2)
00072c e015      	LDI  R17,LOW(5)
00072d c198      	RJMP _0x2000035
                 _0x200004D:
00072e c004      	RJMP _0x200004E
                 _0x2000049:
00072f 30e5      	CPI  R30,LOW(0x5)
000730 f011      	BREQ PC+3
000731 940c 08c6 	JMP _0x2000035
                 _0x200004E:
000733 2fe2      	MOV  R30,R18
000734 36e3      	CPI  R30,LOW(0x63)
000735 f459      	BRNE _0x2000053
000736 940e 0b9d 	CALL SUBOPT_0x36
000738 940e 0ba4 	CALL SUBOPT_0x37
00073a 940e 0b9d 	CALL SUBOPT_0x36
00073c 81a4      	LDD  R26,Z+4
00073d 93aa      	ST   -Y,R26
00073e 940e 0bab 	CALL SUBOPT_0x38
000740 c184      	RJMP _0x2000054
                 _0x2000053:
000741 34e5      	CPI  R30,LOW(0x45)
000742 f011      	BREQ _0x2000057
000743 36e5      	CPI  R30,LOW(0x65)
000744 f409      	BRNE _0x2000058
                 _0x2000057:
000745 c004      	RJMP _0x2000059
                 _0x2000058:
000746 36e6      	CPI  R30,LOW(0x66)
000747 f011      	BREQ PC+3
000748 940c 0794 	JMP _0x200005A
                 _0x2000059:
00074a 01fe      	MOVW R30,R28
00074b 9676      	ADIW R30,22
00074c 87ee      	STD  Y+14,R30
00074d 87ff      	STD  Y+14+1,R31
00074e 940e 0bb3 	CALL SUBOPT_0x39
000750 940e 0e89 	CALL __GETD1P
000752 940e 0bba 	CALL SUBOPT_0x3A
000754 940e 0bbf 	CALL SUBOPT_0x3B
000756 85ad      	LDD  R26,Y+13
000757 23aa      	TST  R26
000758 f022      	BRMI _0x200005B
000759 89ad      	LDD  R26,Y+21
00075a 32ab      	CPI  R26,LOW(0x2B)
00075b f049      	BREQ _0x200005D
00075c c017      	RJMP _0x200005E
                 _0x200005B:
00075d 940e 0bc1 	CALL SUBOPT_0x3C
00075f 940e 0c34 	CALL __ANEGF1
000761 940e 0bba 	CALL SUBOPT_0x3A
000763 e2ed      	LDI  R30,LOW(45)
000764 8bed      	STD  Y+21,R30
                 _0x200005D:
000765 ff07      	SBRS R16,7
000766 c005      	RJMP _0x200005F
000767 89ed      	LDD  R30,Y+21
000768 93ea      	ST   -Y,R30
000769 940e 0bab 	CALL SUBOPT_0x38
00076b c008      	RJMP _0x2000060
                 _0x200005F:
00076c 85ee      	LDD  R30,Y+14
00076d 85ff      	LDD  R31,Y+14+1
00076e 9631      	ADIW R30,1
00076f 87ee      	STD  Y+14,R30
000770 87ff      	STD  Y+14+1,R31
000771 9731      	SBIW R30,1
000772 89ad      	LDD  R26,Y+21
000773 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000774 ff05      	SBRS R16,5
000775 e046      	LDI  R20,LOW(6)
000776 3626      	CPI  R18,102
000777 f461      	BRNE _0x2000062
000778 940e 0bc1 	CALL SUBOPT_0x3C
00077a 940e 0ea3 	CALL __PUTPARD1
00077c 934a      	ST   -Y,R20
00077d 89eb      	LDD  R30,Y+19
00077e 89fc      	LDD  R31,Y+19+1
00077f 93fa      	ST   -Y,R31
000780 93ea      	ST   -Y,R30
000781 940e 096c 	CALL _ftoa
000783 c00b      	RJMP _0x2000063
                 _0x2000062:
000784 940e 0bc1 	CALL SUBOPT_0x3C
000786 940e 0ea3 	CALL __PUTPARD1
000788 934a      	ST   -Y,R20
000789 932a      	ST   -Y,R18
00078a 89ec      	LDD  R30,Y+20
00078b 89fd      	LDD  R31,Y+20+1
00078c 93fa      	ST   -Y,R31
00078d 93ea      	ST   -Y,R30
00078e de4e      	RCALL __ftoe_G100
                 _0x2000063:
00078f 01fe      	MOVW R30,R28
000790 9676      	ADIW R30,22
000791 940e 0bc6 	CALL SUBOPT_0x3D
000793 c01e      	RJMP _0x2000064
                 _0x200005A:
000794 37e3      	CPI  R30,LOW(0x73)
000795 f439      	BRNE _0x2000066
000796 940e 0bbf 	CALL SUBOPT_0x3B
000798 940e 0bce 	CALL SUBOPT_0x3E
00079a 940e 0bc6 	CALL SUBOPT_0x3D
00079c c00e      	RJMP _0x2000067
                 _0x2000066:
00079d 37e0      	CPI  R30,LOW(0x70)
00079e f4c1      	BRNE _0x2000069
00079f 940e 0bbf 	CALL SUBOPT_0x3B
0007a1 940e 0bce 	CALL SUBOPT_0x3E
0007a3 87ee      	STD  Y+14,R30
0007a4 87ff      	STD  Y+14+1,R31
0007a5 93fa      	ST   -Y,R31
0007a6 93ea      	ST   -Y,R30
0007a7 940e 091b 	CALL _strlenf
0007a9 2f1e      	MOV  R17,R30
0007aa 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0007ab 770f      	ANDI R16,LOW(127)
0007ac 3040      	CPI  R20,0
0007ad f011      	BREQ _0x200006B
0007ae 1741      	CP   R20,R17
0007af f008      	BRLO _0x200006C
                 _0x200006B:
0007b0 c001      	RJMP _0x200006A
                 _0x200006C:
0007b1 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
0007b2 e040      	LDI  R20,LOW(0)
0007b3 e0e0      	LDI  R30,LOW(0)
0007b4 8bec      	STD  Y+20,R30
0007b5 e030      	LDI  R19,LOW(0)
0007b6 c06e      	RJMP _0x200006D
                 _0x2000069:
0007b7 36e4      	CPI  R30,LOW(0x64)
0007b8 f011      	BREQ _0x2000070
0007b9 36e9      	CPI  R30,LOW(0x69)
0007ba f411      	BRNE _0x2000071
                 _0x2000070:
0007bb 6004      	ORI  R16,LOW(4)
0007bc c002      	RJMP _0x2000072
                 _0x2000071:
0007bd 37e5      	CPI  R30,LOW(0x75)
0007be f4a1      	BRNE _0x2000073
                 _0x2000072:
0007bf e0ea      	LDI  R30,LOW(10)
0007c0 8bec      	STD  Y+20,R30
0007c1 ff01      	SBRS R16,1
0007c2 c008      	RJMP _0x2000074
                +
0007c3 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0007c4 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0007c5 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0007c6 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0007c7 940e 0bd3 	CALL SUBOPT_0x3F
0007c9 e01a      	LDI  R17,LOW(10)
0007ca c023      	RJMP _0x2000075
                 _0x2000074:
                +
0007cb e1e0     +LDI R30 , LOW ( 0x2710 )
0007cc e2f7     +LDI R31 , HIGH ( 0x2710 )
0007cd e060     +LDI R22 , BYTE3 ( 0x2710 )
0007ce e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0007cf 940e 0bd3 	CALL SUBOPT_0x3F
0007d1 e015      	LDI  R17,LOW(5)
0007d2 c01b      	RJMP _0x2000075
                 _0x2000073:
0007d3 35e8      	CPI  R30,LOW(0x58)
0007d4 f411      	BRNE _0x2000077
0007d5 6008      	ORI  R16,LOW(8)
0007d6 c004      	RJMP _0x2000078
                 _0x2000077:
0007d7 37e8      	CPI  R30,LOW(0x78)
0007d8 f011      	BREQ PC+3
0007d9 940c 08c5 	JMP _0x20000B6
                 _0x2000078:
0007db e1e0      	LDI  R30,LOW(16)
0007dc 8bec      	STD  Y+20,R30
0007dd ff01      	SBRS R16,1
0007de c008      	RJMP _0x200007A
                +
0007df e0e0     +LDI R30 , LOW ( 0x10000000 )
0007e0 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0007e1 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0007e2 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0007e3 940e 0bd3 	CALL SUBOPT_0x3F
0007e5 e018      	LDI  R17,LOW(8)
0007e6 c007      	RJMP _0x2000075
                 _0x200007A:
                +
0007e7 e0e0     +LDI R30 , LOW ( 0x1000 )
0007e8 e1f0     +LDI R31 , HIGH ( 0x1000 )
0007e9 e060     +LDI R22 , BYTE3 ( 0x1000 )
0007ea e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0007eb 940e 0bd3 	CALL SUBOPT_0x3F
0007ed e014      	LDI  R17,LOW(4)
                 _0x2000075:
0007ee 3040      	CPI  R20,0
0007ef f011      	BREQ _0x200007B
0007f0 770f      	ANDI R16,LOW(127)
0007f1 c001      	RJMP _0x200007C
                 _0x200007B:
0007f2 e041      	LDI  R20,LOW(1)
                 _0x200007C:
0007f3 ff01      	SBRS R16,1
0007f4 c008      	RJMP _0x200007D
0007f5 940e 0bbf 	CALL SUBOPT_0x3B
0007f7 940e 0bb3 	CALL SUBOPT_0x39
0007f9 9614      	ADIW R26,4
0007fa 940e 0e89 	CALL __GETD1P
0007fc c00f      	RJMP _0x2000110
                 _0x200007D:
0007fd ff02      	SBRS R16,2
0007fe c007      	RJMP _0x200007F
0007ff 940e 0bbf 	CALL SUBOPT_0x3B
000801 940e 0bce 	CALL SUBOPT_0x3E
000803 940e 0df8 	CALL __CWD1
000805 c006      	RJMP _0x2000110
                 _0x200007F:
000806 940e 0bbf 	CALL SUBOPT_0x3B
000808 940e 0bce 	CALL SUBOPT_0x3E
00080a 2766      	CLR  R22
00080b 2777      	CLR  R23
                 _0x2000110:
                +
00080c 87ea     +STD Y + 10 , R30
00080d 87fb     +STD Y + 10 + 1 , R31
00080e 876c     +STD Y + 10 + 2 , R22
00080f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000810 ff02      	SBRS R16,2
000811 c012      	RJMP _0x2000081
000812 85ad      	LDD  R26,Y+13
000813 23aa      	TST  R26
000814 f442      	BRPL _0x2000082
000815 940e 0bc1 	CALL SUBOPT_0x3C
000817 940e 0de5 	CALL __ANEGD1
000819 940e 0bba 	CALL SUBOPT_0x3A
00081b e2ed      	LDI  R30,LOW(45)
00081c 8bed      	STD  Y+21,R30
                 _0x2000082:
00081d 89ed      	LDD  R30,Y+21
00081e 30e0      	CPI  R30,0
00081f f019      	BREQ _0x2000083
000820 5f1f      	SUBI R17,-LOW(1)
000821 5f4f      	SUBI R20,-LOW(1)
000822 c001      	RJMP _0x2000084
                 _0x2000083:
000823 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000824 2f34      	MOV  R19,R20
                 _0x200006D:
000825 fd00      	SBRC R16,0
000826 c014      	RJMP _0x2000085
                 _0x2000086:
000827 1715      	CP   R17,R21
000828 f410      	BRSH _0x2000089
000829 1735      	CP   R19,R21
00082a f008      	BRLO _0x200008A
                 _0x2000089:
00082b c00f      	RJMP _0x2000088
                 _0x200008A:
00082c ff07      	SBRS R16,7
00082d c008      	RJMP _0x200008B
00082e ff02      	SBRS R16,2
00082f c004      	RJMP _0x200008C
000830 7f0b      	ANDI R16,LOW(251)
000831 892d      	LDD  R18,Y+21
000832 5011      	SUBI R17,LOW(1)
000833 c001      	RJMP _0x200008D
                 _0x200008C:
000834 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000835 c001      	RJMP _0x200008E
                 _0x200008B:
000836 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000837 940e 0b94 	CALL SUBOPT_0x35
000839 5051      	SUBI R21,LOW(1)
00083a cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
00083b 1714      	CP   R17,R20
00083c f490      	BRSH _0x2000091
00083d 6100      	ORI  R16,LOW(16)
00083e ff02      	SBRS R16,2
00083f c006      	RJMP _0x2000092
000840 940e 0bd8 	CALL SUBOPT_0x40
000842 f009      	BREQ _0x2000093
000843 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000844 5011      	SUBI R17,LOW(1)
000845 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000846 e3e0      	LDI  R30,LOW(48)
000847 93ea      	ST   -Y,R30
000848 940e 0bab 	CALL SUBOPT_0x38
00084a 3050      	CPI  R21,0
00084b f009      	BREQ _0x2000094
00084c 5051      	SUBI R21,LOW(1)
                 _0x2000094:
00084d 5041      	SUBI R20,LOW(1)
00084e cfec      	RJMP _0x200008F
                 _0x2000091:
00084f 2f31      	MOV  R19,R17
000850 89ec      	LDD  R30,Y+20
000851 30e0      	CPI  R30,0
000852 f4b9      	BRNE _0x2000095
                 _0x2000096:
000853 3030      	CPI  R19,0
000854 f0a1      	BREQ _0x2000098
000855 ff03      	SBRS R16,3
000856 c006      	RJMP _0x2000099
000857 85ee      	LDD  R30,Y+14
000858 85ff      	LDD  R31,Y+14+1
000859 9125      	LPM  R18,Z+
00085a 87ee      	STD  Y+14,R30
00085b 87ff      	STD  Y+14+1,R31
00085c c005      	RJMP _0x200009A
                 _0x2000099:
00085d 85ae      	LDD  R26,Y+14
00085e 85bf      	LDD  R27,Y+14+1
00085f 912d      	LD   R18,X+
000860 87ae      	STD  Y+14,R26
000861 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000862 940e 0b94 	CALL SUBOPT_0x35
000864 3050      	CPI  R21,0
000865 f009      	BREQ _0x200009B
000866 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000867 5031      	SUBI R19,LOW(1)
000868 cfea      	RJMP _0x2000096
                 _0x2000098:
000869 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
00086a 940e 0bec 	CALL SUBOPT_0x41
00086c 940e 0e28 	CALL __DIVD21U
00086e 2f2e      	MOV  R18,R30
00086f 302a      	CPI  R18,10
000870 f030      	BRLO _0x20000A0
000871 ff03      	SBRS R16,3
000872 c002      	RJMP _0x20000A1
000873 5c29      	SUBI R18,-LOW(55)
000874 c001      	RJMP _0x20000A2
                 _0x20000A1:
000875 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000876 c001      	RJMP _0x20000A3
                 _0x20000A0:
000877 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000878 fd04      	SBRC R16,4
000879 c021      	RJMP _0x20000A5
00087a 3321      	CPI  R18,49
00087b f460      	BRSH _0x20000A7
                +
00087c 89a8     +LDD R26 , Y + 16
00087d 89b9     +LDD R27 , Y + 16 + 1
00087e 898a     +LDD R24 , Y + 16 + 2
00087f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000880 30a1     +CPI R26 , LOW ( 0x1 )
000881 e0e0     +LDI R30 , HIGH ( 0x1 )
000882 07be     +CPC R27 , R30
000883 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000884 078e     +CPC R24 , R30
000885 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000886 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000887 f409      	BRNE _0x20000A6
                 _0x20000A7:
000888 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000889 1743      	CP   R20,R19
00088a f440      	BRSH _0x2000111
00088b 1753      	CP   R21,R19
00088c f010      	BRLO _0x20000AC
00088d ff00      	SBRS R16,0
00088e c001      	RJMP _0x20000AD
                 _0x20000AC:
00088f c010      	RJMP _0x20000AB
                 _0x20000AD:
000890 e220      	LDI  R18,LOW(32)
000891 ff07      	SBRS R16,7
000892 c008      	RJMP _0x20000AE
                 _0x2000111:
000893 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000894 6100      	ORI  R16,LOW(16)
000895 ff02      	SBRS R16,2
000896 c004      	RJMP _0x20000AF
000897 940e 0bd8 	CALL SUBOPT_0x40
000899 f009      	BREQ _0x20000B0
00089a 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
00089b 940e 0b94 	CALL SUBOPT_0x35
00089d 3050      	CPI  R21,0
00089e f009      	BREQ _0x20000B1
00089f 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0008a0 5031      	SUBI R19,LOW(1)
0008a1 940e 0bec 	CALL SUBOPT_0x41
0008a3 940e 0e67 	CALL __MODD21U
0008a5 940e 0bba 	CALL SUBOPT_0x3A
0008a7 89ec      	LDD  R30,Y+20
                +
0008a8 89a8     +LDD R26 , Y + 16
0008a9 89b9     +LDD R27 , Y + 16 + 1
0008aa 898a     +LDD R24 , Y + 16 + 2
0008ab 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0008ac 27ff      	CLR  R31
0008ad 2766      	CLR  R22
0008ae 2777      	CLR  R23
0008af 940e 0e28 	CALL __DIVD21U
0008b1 940e 0bd3 	CALL SUBOPT_0x3F
                +
0008b3 89e8     +LDD R30 , Y + 16
0008b4 89f9     +LDD R31 , Y + 16 + 1
0008b5 896a     +LDD R22 , Y + 16 + 2
0008b6 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0008b7 940e 0eb5 	CALL __CPD10
0008b9 f009      	BREQ _0x200009F
0008ba cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
0008bb ff00      	SBRS R16,0
0008bc c008      	RJMP _0x20000B2
                 _0x20000B3:
0008bd 3050      	CPI  R21,0
0008be f031      	BREQ _0x20000B5
0008bf 5051      	SUBI R21,LOW(1)
0008c0 e2e0      	LDI  R30,LOW(32)
0008c1 93ea      	ST   -Y,R30
0008c2 940e 0bab 	CALL SUBOPT_0x38
0008c4 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
0008c5 e010      	LDI  R17,LOW(0)
                 _0x2000035:
0008c6 ce06      	RJMP _0x2000030
                 _0x2000032:
0008c7 81ae      	LDD  R26,Y+6
0008c8 81bf      	LDD  R27,Y+6+1
0008c9 940e 0e85 	CALL __GETW1P
0008cb 940e 0ec0 	CALL __LOADLOCR6
0008cd 96ef      	ADIW R28,63
0008ce 966f      	ADIW R28,31
0008cf 9508      	RET
                 _sprintf:
0008d0 92ff      	PUSH R15
0008d1 2ef8      	MOV  R15,R24
0008d2 9726      	SBIW R28,6
0008d3 940e 0ebb 	CALL __SAVELOCR4
0008d5 940e 0bf5 	CALL SUBOPT_0x42
0008d7 9730      	SBIW R30,0
0008d8 f419      	BRNE _0x20000B7
0008d9 efef      	LDI  R30,LOW(65535)
0008da efff      	LDI  R31,HIGH(65535)
0008db c025      	RJMP _0x20A0004
                 _0x20000B7:
0008dc 01de      	MOVW R26,R28
0008dd 9616      	ADIW R26,6
0008de 940e 0ddd 	CALL __ADDW2R15
0008e0 018d      	MOVW R16,R26
0008e1 940e 0bf5 	CALL SUBOPT_0x42
0008e3 83ee      	STD  Y+6,R30
0008e4 83ff      	STD  Y+6+1,R31
0008e5 e0e0      	LDI  R30,LOW(0)
0008e6 87e8      	STD  Y+8,R30
0008e7 87e9      	STD  Y+8+1,R30
0008e8 01de      	MOVW R26,R28
0008e9 961a      	ADIW R26,10
0008ea 940e 0ddd 	CALL __ADDW2R15
0008ec 940e 0e85 	CALL __GETW1P
0008ee 93fa      	ST   -Y,R31
0008ef 93ea      	ST   -Y,R30
0008f0 931a      	ST   -Y,R17
0008f1 930a      	ST   -Y,R16
0008f2 eae5      	LDI  R30,LOW(_put_buff_G100)
0008f3 e0f5      	LDI  R31,HIGH(_put_buff_G100)
0008f4 93fa      	ST   -Y,R31
0008f5 93ea      	ST   -Y,R30
0008f6 01fe      	MOVW R30,R28
0008f7 963a      	ADIW R30,10
0008f8 93fa      	ST   -Y,R31
0008f9 93ea      	ST   -Y,R30
0008fa ddb7      	RCALL __print_G100
0008fb 019f      	MOVW R18,R30
0008fc 81ae      	LDD  R26,Y+6
0008fd 81bf      	LDD  R27,Y+6+1
0008fe e0e0      	LDI  R30,LOW(0)
0008ff 93ec      	ST   X,R30
000900 01f9      	MOVW R30,R18
                 _0x20A0004:
000901 940e 0ec2 	CALL __LOADLOCR4
000903 962a      	ADIW R28,10
000904 90ff      	POP  R15
000905 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
000906 91e9          ld   r30,y+
000907 91f9          ld   r31,y+
000908 91a9          ld   r26,y+
000909 91b9          ld   r27,y+
00090a 01cd          movw r24,r26
                 strcpyf0:
00090b 9005      	lpm  r0,z+
00090c 920d          st   x+,r0
00090d 2000          tst  r0
00090e f7e1          brne strcpyf0
00090f 01fc          movw r30,r24
000910 9508          ret
                 _strlen:
000911 91a9          ld   r26,y+
000912 91b9          ld   r27,y+
000913 27ee          clr  r30
000914 27ff          clr  r31
                 strlen0:
000915 916d          ld   r22,x+
000916 2366          tst  r22
000917 f011          breq strlen1
000918 9631          adiw r30,1
000919 cffb          rjmp strlen0
                 strlen1:
00091a 9508          ret
                 _strlenf:
00091b 27aa          clr  r26
00091c 27bb          clr  r27
00091d 91e9          ld   r30,y+
00091e 91f9          ld   r31,y+
                 strlenf0:
00091f 9005      	lpm  r0,z+
000920 2000          tst  r0
000921 f011          breq strlenf1
000922 9611          adiw r26,1
000923 cffb          rjmp strlenf0
                 strlenf1:
000924 01fd          movw r30,r26
000925 9508          ret
                 
                 	.CSEG
                 _ftrunc:
000926 817b         ldd  r23,y+3
000927 816a         ldd  r22,y+2
000928 81f9         ldd  r31,y+1
000929 81e8         ld   r30,y
00092a fb77         bst  r23,7
00092b 0f77         lsl  r23
00092c fd67         sbrc r22,7
00092d 6071         sbr  r23,1
00092e 2f97         mov  r25,r23
00092f 579e         subi r25,0x7e
000930 f081         breq __ftrunc0
000931 f078         brcs __ftrunc0
000932 3198         cpi  r25,24
000933 f490         brsh __ftrunc1
000934 27aa         clr  r26
000935 27bb         clr  r27
000936 2788         clr  r24
                 __ftrunc2:
000937 9408         sec
000938 9587         ror  r24
000939 95b7         ror  r27
00093a 95a7         ror  r26
00093b 959a         dec  r25
00093c f7d1         brne __ftrunc2
00093d 23ea         and  r30,r26
00093e 23fb         and  r31,r27
00093f 2368         and  r22,r24
000940 c005         rjmp __ftrunc1
                 __ftrunc0:
000941 94e8         clt
000942 2777         clr  r23
000943 27ee         clr  r30
000944 27ff         clr  r31
000945 2766         clr  r22
                 __ftrunc1:
000946 776f         cbr  r22,0x80
000947 9576         lsr  r23
000948 f408         brcc __ftrunc3
000949 6860         sbr  r22,0x80
                 __ftrunc3:
00094a f977         bld  r23,7
00094b 91a9         ld   r26,y+
00094c 91b9         ld   r27,y+
00094d 9189         ld   r24,y+
00094e 9199         ld   r25,y+
00094f 17ea         cp   r30,r26
000950 07fb         cpc  r31,r27
000951 0768         cpc  r22,r24
000952 0779         cpc  r23,r25
000953 fb97         bst  r25,7
000954 9508         ret
                 _floor:
000955 940e 0bfc 	CALL SUBOPT_0x43
000957 940e 0ea3 	CALL __PUTPARD1
000959 940e 0926 	CALL _ftrunc
00095b 940e 0e99 	CALL __PUTD1S0
00095d f419          brne __floor1
                 __floor0:
00095e 940e 0bfc 	CALL SUBOPT_0x43
000960 c009      	RJMP _0x20A0003
                 __floor1:
000961 f7e6          brtc __floor0
000962 940e 0bfc 	CALL SUBOPT_0x43
                +
000964 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000965 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000966 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000967 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000968 940e 0cd3 	CALL __SUBF12
                 _0x20A0003:
00096a 9624      	ADIW R28,4
00096b 9508      	RET
                 
                 	.CSEG
                 _ftoa:
00096c 9724      	SBIW R28,4
00096d e0e0      	LDI  R30,LOW(0)
00096e 83e8      	ST   Y,R30
00096f 83e9      	STD  Y+1,R30
000970 83ea      	STD  Y+2,R30
000971 e3ef      	LDI  R30,LOW(63)
000972 83eb      	STD  Y+3,R30
000973 931a      	ST   -Y,R17
000974 930a      	ST   -Y,R16
000975 85eb      	LDD  R30,Y+11
000976 85fc      	LDD  R31,Y+11+1
000977 3fef      	CPI  R30,LOW(0xFFFF)
000978 efaf      	LDI  R26,HIGH(0xFFFF)
000979 07fa      	CPC  R31,R26
00097a f429      	BRNE _0x208000D
00097b d283      	RCALL SUBOPT_0x44
                +
00097c e7ea     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
00097d e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
00097e d1b5      	RCALL SUBOPT_0x28
00097f c082      	RJMP _0x20A0002
                 _0x208000D:
000980 3fef      	CPI  R30,LOW(0x7FFF)
000981 e7af      	LDI  R26,HIGH(0x7FFF)
000982 07fa      	CPC  R31,R26
000983 f429      	BRNE _0x208000C
000984 d27a      	RCALL SUBOPT_0x44
                +
000985 e7eb     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000986 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000987 d1ac      	RCALL SUBOPT_0x28
000988 c079      	RJMP _0x20A0002
                 _0x208000C:
000989 85ac      	LDD  R26,Y+12
00098a 23aa      	TST  R26
00098b f452      	BRPL _0x208000F
                +
00098c 85e9     +LDD R30 , Y + 9
00098d 85fa     +LDD R31 , Y + 9 + 1
00098e 856b     +LDD R22 , Y + 9 + 2
00098f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000990 940e 0c34 	CALL __ANEGF1
000992 d271      	RCALL SUBOPT_0x45
000993 d275      	RCALL SUBOPT_0x46
000994 e2ed      	LDI  R30,LOW(45)
000995 93ec      	ST   X,R30
                 _0x208000F:
000996 85a8      	LDD  R26,Y+8
000997 30a7      	CPI  R26,LOW(0x7)
000998 f010      	BRLO _0x2080010
000999 e0e6      	LDI  R30,LOW(6)
00099a 87e8      	STD  Y+8,R30
                 _0x2080010:
00099b 8518      	LDD  R17,Y+8
                 _0x2080011:
00099c 2fe1      	MOV  R30,R17
00099d 5011      	SUBI R17,1
00099e 30e0      	CPI  R30,0
00099f f021      	BREQ _0x2080013
0009a0 d26f      	RCALL SUBOPT_0x47
0009a1 d1d4      	RCALL SUBOPT_0x30
0009a2 d272      	RCALL SUBOPT_0x48
0009a3 cff8      	RJMP _0x2080011
                 _0x2080013:
0009a4 d275      	RCALL SUBOPT_0x49
0009a5 940e 0cda 	CALL __ADDF12
0009a7 d25c      	RCALL SUBOPT_0x45
0009a8 e010      	LDI  R17,LOW(0)
                +
0009a9 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0009aa e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0009ab e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0009ac e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0009ad d267      	RCALL SUBOPT_0x48
                 _0x2080014:
0009ae d26b      	RCALL SUBOPT_0x49
0009af 940e 0dbd 	CALL __CMPF12
0009b1 f060      	BRLO _0x2080016
0009b2 d25d      	RCALL SUBOPT_0x47
0009b3 d1af      	RCALL SUBOPT_0x2D
0009b4 d260      	RCALL SUBOPT_0x48
0009b5 5f1f      	SUBI R17,-LOW(1)
0009b6 3217      	CPI  R17,39
0009b7 f028      	BRLO _0x2080017
0009b8 d246      	RCALL SUBOPT_0x44
                +
0009b9 e7ef     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
0009ba e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
0009bb d178      	RCALL SUBOPT_0x28
0009bc c045      	RJMP _0x20A0002
                 _0x2080017:
0009bd cff0      	RJMP _0x2080014
                 _0x2080016:
0009be 3010      	CPI  R17,0
0009bf f421      	BRNE _0x2080018
0009c0 d248      	RCALL SUBOPT_0x46
0009c1 e3e0      	LDI  R30,LOW(48)
0009c2 93ec      	ST   X,R30
0009c3 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
0009c4 2fe1      	MOV  R30,R17
0009c5 5011      	SUBI R17,1
0009c6 30e0      	CPI  R30,0
0009c7 f0c9      	BREQ _0x208001C
0009c8 d247      	RCALL SUBOPT_0x47
0009c9 d1ac      	RCALL SUBOPT_0x30
0009ca d1a4      	RCALL SUBOPT_0x2F
0009cb 940e 0ea3 	CALL __PUTPARD1
0009cd 940e 0955 	CALL _floor
0009cf d245      	RCALL SUBOPT_0x48
0009d0 d249      	RCALL SUBOPT_0x49
0009d1 940e 0d78 	CALL __DIVF21
0009d3 940e 0c67 	CALL __CFD1U
0009d5 2f0e      	MOV  R16,R30
0009d6 d232      	RCALL SUBOPT_0x46
0009d7 d1ac      	RCALL SUBOPT_0x32
0009d8 e0f0      	LDI  R31,0
0009d9 d236      	RCALL SUBOPT_0x47
0009da d084      	RCALL SUBOPT_0xC
0009db 940e 0d2a 	CALL __MULF12
0009dd d245      	RCALL SUBOPT_0x4A
0009de d1aa      	RCALL SUBOPT_0x33
0009df d224      	RCALL SUBOPT_0x45
0009e0 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
0009e1 85e8      	LDD  R30,Y+8
0009e2 30e0      	CPI  R30,0
0009e3 f0d1      	BREQ _0x20A0001
0009e4 d224      	RCALL SUBOPT_0x46
0009e5 e2ee      	LDI  R30,LOW(46)
0009e6 93ec      	ST   X,R30
                 _0x208001E:
0009e7 85e8      	LDD  R30,Y+8
0009e8 50e1      	SUBI R30,LOW(1)
0009e9 87e8      	STD  Y+8,R30
0009ea 5fef      	SUBI R30,-LOW(1)
0009eb f091      	BREQ _0x2080020
0009ec d236      	RCALL SUBOPT_0x4A
0009ed d175      	RCALL SUBOPT_0x2D
0009ee d215      	RCALL SUBOPT_0x45
                +
0009ef 85e9     +LDD R30 , Y + 9
0009f0 85fa     +LDD R31 , Y + 9 + 1
0009f1 856b     +LDD R22 , Y + 9 + 2
0009f2 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0009f3 940e 0c67 	CALL __CFD1U
0009f5 2f0e      	MOV  R16,R30
0009f6 d212      	RCALL SUBOPT_0x46
0009f7 d18c      	RCALL SUBOPT_0x32
0009f8 e0f0      	LDI  R31,0
0009f9 d229      	RCALL SUBOPT_0x4A
0009fa d064      	RCALL SUBOPT_0xC
0009fb d18d      	RCALL SUBOPT_0x33
0009fc d207      	RCALL SUBOPT_0x45
0009fd cfe9      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
0009fe 81ae      	LDD  R26,Y+6
0009ff 81bf      	LDD  R27,Y+6+1
000a00 e0e0      	LDI  R30,LOW(0)
000a01 93ec      	ST   X,R30
                 _0x20A0002:
000a02 8119      	LDD  R17,Y+1
000a03 8108      	LDD  R16,Y+0
000a04 962d      	ADIW R28,13
000a05 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _seg_pat:
00058b           	.BYTE 0xA
                 _seg_pat1:
000595           	.BYTE 0xA
                 _match:
00059f           	.BYTE 0xA
                 _flag:
0005a9           	.BYTE 0x2
                 _flag2:
0005ab           	.BYTE 0x2
                 _k:
0005ad           	.BYTE 0x2
                 _b:
0005af           	.BYTE 0x2
                 _n:
0005b1           	.BYTE 0x2
                 _k1:
0005b3           	.BYTE 0x2
                 _ti_Cnt_1ms:
0005b5           	.BYTE 0x1
                 _Com_Reg:
0005b6           	.BYTE 0x1
                 __seed_G104:
0005b7           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000a06 93e0 0065 	STS  101,R30
000a08 91e0 0065 	LDS  R30,101
000a0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000a0b 60e1      	ORI  R30,1
000a0c 93e0 0065 	STS  101,R30
                +
000a0e ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000a0f 958a     +DEC R24
000a10 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000a11 81e8      	LD   R30,Y
000a12 bbeb      	OUT  0x1B,R30
                +
000a13 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000a14 958a     +DEC R24
000a15 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000a16 91e0 0065 	LDS  R30,101
000a18 7fee      	ANDI R30,0xFE
000a19 93e0 0065 	STS  101,R30
000a1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2:
000a1c 93fa      	ST   -Y,R31
000a1d 93ea      	ST   -Y,R30
000a1e 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
000a20 93ea      	ST   -Y,R30
000a21 940e 0128 	CALL _LCD_Comm
000a23 e0e2      	LDI  R30,LOW(2)
000a24 93ea      	ST   -Y,R30
000a25 940c 0133 	JMP  _LCD_Delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000a27 e3e8      	LDI  R30,LOW(56)
000a28 93ea      	ST   -Y,R30
000a29 940e 0128 	CALL _LCD_Comm
000a2b e0e4      	LDI  R30,LOW(4)
000a2c 93ea      	ST   -Y,R30
000a2d 940c 0133 	JMP  _LCD_Delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
000a2f 01df      	MOVW R26,R30
000a30 2de4      	MOV  R30,R4
000a31 e0f0      	LDI  R31,0
000a32 56e1      	SUBI R30,LOW(-_match)
000a33 4ffa      	SBCI R31,HIGH(-_match)
000a34 81e0      	LD   R30,Z
000a35 e0f0      	LDI  R31,0
000a36 17ea      	CP   R30,R26
000a37 07fb      	CPC  R31,R27
000a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
000a39 01d8      	MOVW R26,R16
                +
000a3a 5f0f     +SUBI R16 , LOW ( - 1 )
000a3b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a3c 3da1      	CPI  R26,LOW(0x7D1)
000a3d e0e7      	LDI  R30,HIGH(0x7D1)
000a3e 07be      	CPC  R27,R30
000a3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000a40 81ec      	LDD  R30,Y+4
000a41 93e0 0073 	STS  115,R30
000a43 e8e4      	LDI  R30,LOW(132)
000a44 93e0 0074 	STS  116,R30
000a46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000a47 93e0 0073 	STS  115,R30
000a49 e8e4      	LDI  R30,LOW(132)
000a4a 93e0 0074 	STS  116,R30
000a4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x9:
000a4d 01d9      	MOVW R26,R18
                +
000a4e 5f2f     +SUBI R18 , LOW ( - 1 )
000a4f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000a50 3da1      	CPI  R26,LOW(0x7D1)
000a51 e0e7      	LDI  R30,HIGH(0x7D1)
000a52 07be      	CPC  R27,R30
000a53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
                +
000a54 01fe     +MOVW R30 , R28
000a55 58e6     +SUBI R30 , LOW ( - 122 )
000a56 4fff     +SBCI R31 , HIGH ( - 122 )
000a57 81e0     +LD R30 , Z
                 	__GETB1SX 122
000a58 93ea      	ST   -Y,R30
000a59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xB:
000a5a 91a0 05a9 	LDS  R26,_flag
000a5c 91b0 05aa 	LDS  R27,_flag+1
000a5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000a5f 940e 0df8 	CALL __CWD1
000a61 940e 0ca0 	CALL __CDF1
000a63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
000a64 e0e0     +LDI R30 , LOW ( 0x41200000 )
000a65 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000a66 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000a67 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000a68 940e 0d78 	CALL __DIVF21
000a6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
000a6b 01de     +MOVW R26 , R28
000a6c 54a9     +SUBI R26 , LOW ( - 183 )
000a6d 4fbf     +SBCI R27 , HIGH ( - 183 )
000a6e 900d     +LD R0 , X +
000a6f 901d     +LD R1 , X +
000a70 918d     +LD R24 , X +
000a71 919c     +LD R25 , X
000a72 01d0     +MOVW R26 , R0
                 	__GETD2SX 183
000a73 cff0      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:77 WORDS
                 SUBOPT_0xF:
                +
000a74 01de     +MOVW R26 , R28
000a75 54ad     +SUBI R26 , LOW ( - 179 )
000a76 4fbf     +SBCI R27 , HIGH ( - 179 )
000a77 900d     +LD R0 , X +
000a78 901d     +LD R1 , X +
000a79 918d     +LD R24 , X +
000a7a 919c     +LD R25 , X
000a7b 01d0     +MOVW R26 , R0
                 	__GETD2SX 179
000a7c 940e 0e9e 	CALL __PUTDZ20
000a7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000a7f 01f9      	MOVW R30,R18
000a80 01de      	MOVW R26,R28
000a81 57a5      	SUBI R26,LOW(-(139))
000a82 4fbf      	SBCI R27,HIGH(-(139))
000a83 940e 0ded 	CALL __LSLW2
000a85 0fae      	ADD  R26,R30
000a86 1fbf      	ADC  R27,R31
000a87 940e 0e89 	CALL __GETD1P
000a89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
000a8a 01fa      	MOVW R30,R20
000a8b 01de      	MOVW R26,R28
000a8c 57a5      	SUBI R26,LOW(-(139))
000a8d 4fbf      	SBCI R27,HIGH(-(139))
000a8e 940e 0ded 	CALL __LSLW2
000a90 0fae      	ADD  R26,R30
000a91 1fbf      	ADC  R27,R31
000a92 940e 0e89 	CALL __GETD1P
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
000a95 01de      	MOVW R26,R28
000a96 57a5      	SUBI R26,LOW(-(139))
000a97 4fbf      	SBCI R27,HIGH(-(139))
000a98 940e 0ded 	CALL __LSLW2
000a9a 0fea      	ADD  R30,R26
000a9b 1ffb      	ADC  R31,R27
000a9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000a9d 91a0 05ab 	LDS  R26,_flag2
000a9f 91b0 05ac 	LDS  R27,_flag2+1
000aa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000aa2 01fe      	MOVW R30,R28
000aa3 96b8      	ADIW R30,40
000aa4 93fa      	ST   -Y,R31
000aa5 93ea      	ST   -Y,R30
000aa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
000aa7 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000aa8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000aa9 93fa      	ST   -Y,R31
000aaa 93ea      	ST   -Y,R30
000aab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
000aac 940e 0ea3 	CALL __PUTPARD1
000aae e084      	LDI  R24,4
000aaf 940e 08d0 	CALL _sprintf
000ab1 9628      	ADIW R28,8
000ab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17:
000ab3 e1e4      	LDI  R30,LOW(20)
000ab4 e0f0      	LDI  R31,HIGH(20)
000ab5 cf66      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
                +
000ab6 01de     +MOVW R26 , R28
000ab7 58a5     +SUBI R26 , LOW ( - 123 )
000ab8 4fbf     +SBCI R27 , HIGH ( - 123 )
000ab9 93ed     +ST X + , R30
000aba 93fd     +ST X + , R31
000abb 936d     +ST X + , R22
000abc 937c     +ST X , R23
                 	__PUTD1SX 123
000abd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x19:
                +
000abe 01fe     +MOVW R30 , R28
000abf 58e5     +SUBI R30 , LOW ( - 123 )
000ac0 4fff     +SBCI R31 , HIGH ( - 123 )
000ac1 9001     +LD R0 , Z +
000ac2 9011     +LD R1 , Z +
000ac3 9161     +LD R22 , Z +
000ac4 8170     +LD R23 , Z
000ac5 01f0     +MOVW R30 , R0
                 	__GETD1SX 123
000ac6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
000ac7 940e 0c69 	CALL __CFD1
000ac9 93fa      	ST   -Y,R31
000aca 93ea      	ST   -Y,R30
000acb 940c 0172 	JMP  _FND_MATCH
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
000acd 01fe      	MOVW R30,R28
000ace 93fa      	ST   -Y,R31
000acf 93ea      	ST   -Y,R30
000ad0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1C:
                +
000ad1 01fe     +MOVW R30 , R28
000ad2 58e1     +SUBI R30 , LOW ( - 127 )
000ad3 4fff     +SBCI R31 , HIGH ( - 127 )
000ad4 9001     +LD R0 , Z +
000ad5 9011     +LD R1 , Z +
000ad6 9161     +LD R22 , Z +
000ad7 8170     +LD R23 , Z
000ad8 01f0     +MOVW R30 , R0
                 	__GETD1SX 127
000ad9 cfd2      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D:
000ada e0e0      	LDI  R30,LOW(0)
000adb 93ea      	ST   -Y,R30
000adc 93ea      	ST   -Y,R30
000add 940c 014d 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1E:
000adf 93fa      	ST   -Y,R31
000ae0 93ea      	ST   -Y,R30
000ae1 940e 013f 	CALL _LCD_Str
000ae3 e0e1      	LDI  R30,LOW(1)
000ae4 93ea      	ST   -Y,R30
000ae5 e0e0      	LDI  R30,LOW(0)
000ae6 93ea      	ST   -Y,R30
000ae7 940e 014d 	CALL _LCD_Pos
000ae9 cfe3      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
000aea 91ed      	LD   R30,X+
000aeb 91fd      	LD   R31,X+
000aec 9631      	ADIW R30,1
000aed 93fe      	ST   -X,R31
000aee 93ee      	ST   -X,R30
000aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000af0 940e 0157 	CALL _LCD_Clear
000af2 dfcb      	RCALL SUBOPT_0x19
                +
000af3 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000af4 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000af5 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000af6 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000af7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x21:
                +
000af8 01fe     +MOVW R30 , R28
000af9 58e1     +SUBI R30 , LOW ( - 127 )
000afa 4fff     +SBCI R31 , HIGH ( - 127 )
000afb 9001     +LD R0 , Z +
000afc 9011     +LD R1 , Z +
000afd 9161     +LD R22 , Z +
000afe 8170     +LD R23 , Z
000aff 01f0     +MOVW R30 , R0
                 	__GETD1SX 127
                +
000b00 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b01 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b02 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b03 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b04 940e 0cda 	CALL __ADDF12
                +
000b06 01de     +MOVW R26 , R28
000b07 57ad     +SUBI R26 , LOW ( - 131 )
000b08 4fbf     +SBCI R27 , HIGH ( - 131 )
000b09 900d     +LD R0 , X +
000b0a 901d     +LD R1 , X +
000b0b 918d     +LD R24 , X +
000b0c 919c     +LD R25 , X
000b0d 01d0     +MOVW R26 , R0
                 	__GETD2SX 131
000b0e 940e 0dbd 	CALL __CMPF12
000b10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x22:
000b11 93fa      	ST   -Y,R31
000b12 93ea      	ST   -Y,R30
000b13 940c 013f 	JMP  _LCD_Str
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
000b15 e0e1      	LDI  R30,LOW(1)
000b16 93ea      	ST   -Y,R30
000b17 e0e0      	LDI  R30,LOW(0)
000b18 93ea      	ST   -Y,R30
000b19 940c 014d 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
000b1b e0e1      	LDI  R30,LOW(1)
000b1c 93ea      	ST   -Y,R30
000b1d e0e7      	LDI  R30,LOW(7)
000b1e 93ea      	ST   -Y,R30
000b1f 940e 014d 	CALL _LCD_Pos
000b21 cf80      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000b22 e1e9      	LDI  R30,LOW(25)
000b23 e0f0      	LDI  R31,HIGH(25)
000b24 16ce      	CP   R12,R30
000b25 06df      	CPC  R13,R31
000b26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000b27 9a1e      	SBI  0x3,6
                +
000b28 ea84     +LDI R24 , LOW ( 2212 )
000b29 e098     +LDI R25 , HIGH ( 2212 )
                +__DELAY_USW_LOOP :
000b2a 9701     +SBIW R24 , 1
000b2b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 2212
000b2c 981e      	CBI  0x3,6
000b2d cf85      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000b2e 940e 013f 	CALL _LCD_Str
000b30 e0ec      	LDI  R30,LOW(12)
000b31 93ea      	ST   -Y,R30
000b32 940c 0128 	JMP  _LCD_Comm
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
000b34 93fa      	ST   -Y,R31
000b35 93ea      	ST   -Y,R30
000b36 940c 0906 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29:
                +
000b38 81ac     +LDD R26 , Y + 4
000b39 81bd     +LDD R27 , Y + 4 + 1
000b3a 818e     +LDD R24 , Y + 4 + 2
000b3b 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b3c e0e0     +LDI R30 , LOW ( 0x41200000 )
000b3d e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b3e e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b3f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b40 940e 0d2a 	CALL __MULF12
                +
000b42 83ec     +STD Y + 4 , R30
000b43 83fd     +STD Y + 4 + 1 , R31
000b44 836e     +STD Y + 4 + 2 , R22
000b45 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000b46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A:
                +
000b47 81ec     +LDD R30 , Y + 4
000b48 81fd     +LDD R31 , Y + 4 + 1
000b49 816e     +LDD R22 , Y + 4 + 2
000b4a 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b4b 85ac     +LDD R26 , Y + 12
000b4c 85bd     +LDD R27 , Y + 12 + 1
000b4d 858e     +LDD R24 , Y + 12 + 2
000b4e 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b4f 940e 0dbd 	CALL __CMPF12
000b51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
                +
000b52 85ac     +LDD R26 , Y + 12
000b53 85bd     +LDD R27 , Y + 12 + 1
000b54 858e     +LDD R24 , Y + 12 + 2
000b55 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
                +
000b57 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b58 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b59 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b5a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b5b 940e 0d2a 	CALL __MULF12
                +
000b5d 87ec     +STD Y + 12 , R30
000b5e 87fd     +STD Y + 12 + 1 , R31
000b5f 876e     +STD Y + 12 + 2 , R22
000b60 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b61 5f3f      	SUBI R19,-LOW(1)
000b62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D:
                +
000b63 e0e0     +LDI R30 , LOW ( 0x41200000 )
000b64 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b65 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b66 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b67 940e 0d2a 	CALL __MULF12
000b69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
                +
000b6a 87ec     +STD Y + 12 , R30
000b6b 87fd     +STD Y + 12 + 1 , R31
000b6c 876e     +STD Y + 12 + 2 , R22
000b6d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
                +
000b6f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b70 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b71 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b72 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b73 940e 0cda 	CALL __ADDF12
000b75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30:
                +
000b76 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b77 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b78 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b79 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b7a 940e 0d2a 	CALL __MULF12
000b7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000b7d 85a8      	LDD  R26,Y+8
000b7e 85b9      	LDD  R27,Y+8+1
000b7f 9611      	ADIW R26,1
000b80 87a8      	STD  Y+8,R26
000b81 87b9      	STD  Y+8+1,R27
000b82 9711      	SBIW R26,1
000b83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000b84 2fe0      	MOV  R30,R16
000b85 5de0      	SUBI R30,-LOW(48)
000b86 93ec      	ST   X,R30
000b87 2fe0      	MOV  R30,R16
000b88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
000b89 940e 0ea8 	CALL __SWAPD12
000b8b 940e 0cd3 	CALL __SUBF12
000b8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34:
000b8e 85e8      	LDD  R30,Y+8
000b8f 85f9      	LDD  R31,Y+8+1
000b90 9631      	ADIW R30,1
000b91 87e8      	STD  Y+8,R30
000b92 87f9      	STD  Y+8+1,R31
000b93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
000b94 932a      	ST   -Y,R18
000b95 81ef      	LDD  R30,Y+7
000b96 85f8      	LDD  R31,Y+7+1
000b97 93fa      	ST   -Y,R31
000b98 93ea      	ST   -Y,R30
000b99 85eb      	LDD  R30,Y+11
000b9a 85fc      	LDD  R31,Y+11+1
000b9b 9509      	ICALL
000b9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x36:
                +
000b9d 01fe     +MOVW R30 , R28
000b9e 5ae6     +SUBI R30 , LOW ( - 90 )
000b9f 4fff     +SBCI R31 , HIGH ( - 90 )
000ba0 9001     +LD R0 , Z +
000ba1 81f0     +LD R31 , Z
000ba2 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000ba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
000ba4 9734      	SBIW R30,4
                +
000ba5 01de     +MOVW R26 , R28
000ba6 5aa6     +SUBI R26 , LOW ( - 90 )
000ba7 4fbf     +SBCI R27 , HIGH ( - 90 )
000ba8 93ed     +ST X + , R30
000ba9 93fc     +ST X , R31
                 	__PUTW1SX 90
000baa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x38:
000bab 81ef      	LDD  R30,Y+7
000bac 85f8      	LDD  R31,Y+7+1
000bad 93fa      	ST   -Y,R31
000bae 93ea      	ST   -Y,R30
000baf 85eb      	LDD  R30,Y+11
000bb0 85fc      	LDD  R31,Y+11+1
000bb1 9509      	ICALL
000bb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x39:
                +
000bb3 01de     +MOVW R26 , R28
000bb4 5aa6     +SUBI R26 , LOW ( - 90 )
000bb5 4fbf     +SBCI R27 , HIGH ( - 90 )
000bb6 900d     +LD R0 , X +
000bb7 91bc     +LD R27 , X
000bb8 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000bb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000bba 87ea     +STD Y + 10 , R30
000bbb 87fb     +STD Y + 10 + 1 , R31
000bbc 876c     +STD Y + 10 + 2 , R22
000bbd 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000bbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3B:
000bbf dfdd      	RCALL SUBOPT_0x36
000bc0 cfe3      	RJMP SUBOPT_0x37
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
                +
000bc1 85ea     +LDD R30 , Y + 10
000bc2 85fb     +LDD R31 , Y + 10 + 1
000bc3 856c     +LDD R22 , Y + 10 + 2
000bc4 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000bc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3D:
000bc6 87ee      	STD  Y+14,R30
000bc7 87ff      	STD  Y+14+1,R31
000bc8 93fa      	ST   -Y,R31
000bc9 93ea      	ST   -Y,R30
000bca 940e 0911 	CALL _strlen
000bcc 2f1e      	MOV  R17,R30
000bcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3E:
000bce dfe4      	RCALL SUBOPT_0x39
000bcf 9614      	ADIW R26,4
000bd0 940e 0e85 	CALL __GETW1P
000bd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
                +
000bd3 8be8     +STD Y + 16 , R30
000bd4 8bf9     +STD Y + 16 + 1 , R31
000bd5 8b6a     +STD Y + 16 + 2 , R22
000bd6 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000bd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x40:
000bd8 7f0b      	ANDI R16,LOW(251)
000bd9 89ed      	LDD  R30,Y+21
000bda 93ea      	ST   -Y,R30
                +
000bdb 01fe     +MOVW R30 , R28
000bdc 5ae9     +SUBI R30 , LOW ( - 87 )
000bdd 4fff     +SBCI R31 , HIGH ( - 87 )
000bde 9001     +LD R0 , Z +
000bdf 81f0     +LD R31 , Z
000be0 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000be1 93fa      	ST   -Y,R31
000be2 93ea      	ST   -Y,R30
                +
000be3 01fe     +MOVW R30 , R28
000be4 5ae5     +SUBI R30 , LOW ( - 91 )
000be5 4fff     +SBCI R31 , HIGH ( - 91 )
000be6 9001     +LD R0 , Z +
000be7 81f0     +LD R31 , Z
000be8 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000be9 9509      	ICALL
000bea 3050      	CPI  R21,0
000beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41:
                +
000bec 89e8     +LDD R30 , Y + 16
000bed 89f9     +LDD R31 , Y + 16 + 1
000bee 896a     +LDD R22 , Y + 16 + 2
000bef 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000bf0 85aa     +LDD R26 , Y + 10
000bf1 85bb     +LDD R27 , Y + 10 + 1
000bf2 858c     +LDD R24 , Y + 10 + 2
000bf3 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000bf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000bf5 01de      	MOVW R26,R28
000bf6 961c      	ADIW R26,12
000bf7 940e 0ddd 	CALL __ADDW2R15
000bf9 940e 0e85 	CALL __GETW1P
000bfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000bfc 940e 0e94 	CALL __GETD1S0
000bfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000bff 81ee      	LDD  R30,Y+6
000c00 81ff      	LDD  R31,Y+6+1
000c01 93fa      	ST   -Y,R31
000c02 93ea      	ST   -Y,R30
000c03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
                +
000c04 87e9     +STD Y + 9 , R30
000c05 87fa     +STD Y + 9 + 1 , R31
000c06 876b     +STD Y + 9 + 2 , R22
000c07 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x46:
000c09 81ae      	LDD  R26,Y+6
000c0a 81bf      	LDD  R27,Y+6+1
000c0b 9611      	ADIW R26,1
000c0c 83ae      	STD  Y+6,R26
000c0d 83bf      	STD  Y+6+1,R27
000c0e 9711      	SBIW R26,1
000c0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
                +
000c10 81aa     +LDD R26 , Y + 2
000c11 81bb     +LDD R27 , Y + 2 + 1
000c12 818c     +LDD R24 , Y + 2 + 2
000c13 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000c14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
000c15 83ea     +STD Y + 2 , R30
000c16 83fb     +STD Y + 2 + 1 , R31
000c17 836c     +STD Y + 2 + 2 , R22
000c18 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
                +
000c1a 81ea     +LDD R30 , Y + 2
000c1b 81fb     +LDD R31 , Y + 2 + 1
000c1c 816c     +LDD R22 , Y + 2 + 2
000c1d 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000c1e 85a9     +LDD R26 , Y + 9
000c1f 85ba     +LDD R27 , Y + 9 + 1
000c20 858b     +LDD R24 , Y + 9 + 2
000c21 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
                +
000c23 85a9     +LDD R26 , Y + 9
000c24 85ba     +LDD R27 , Y + 9 + 1
000c25 858b     +LDD R24 , Y + 9 + 2
000c26 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c27 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000c28 91e9      	ld   r30,y+
000c29 91f9      	ld   r31,y+
000c2a 9630      	adiw r30,0
000c2b f039      	breq __delay_ms1
                 __delay_ms0:
                +
000c2c e686     +LDI R24 , LOW ( 0xE66 )
000c2d e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000c2e 9701     +SBIW R24 , 1
000c2f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000c30 95a8      	wdr
000c31 9731      	sbiw r30,1
000c32 f7c9      	brne __delay_ms0
                 __delay_ms1:
000c33 9508      	ret
                 
                 __ANEGF1:
000c34 9730      	SBIW R30,0
000c35 4060      	SBCI R22,0
000c36 4070      	SBCI R23,0
000c37 f009      	BREQ __ANEGF10
000c38 5870      	SUBI R23,0x80
                 __ANEGF10:
000c39 9508      	RET
                 
                 __ROUND_REPACK:
000c3a 2355      	TST  R21
000c3b f442      	BRPL __REPACK
000c3c 3850      	CPI  R21,0x80
000c3d f411      	BRNE __ROUND_REPACK0
000c3e ffe0      	SBRS R30,0
000c3f c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000c40 9631      	ADIW R30,1
000c41 1f69      	ADC  R22,R25
000c42 1f79      	ADC  R23,R25
000c43 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000c44 e850      	LDI  R21,0x80
000c45 2757      	EOR  R21,R23
000c46 f411      	BRNE __REPACK0
000c47 935f      	PUSH R21
000c48 c0cf      	RJMP __ZERORES
                 __REPACK0:
000c49 3f5f      	CPI  R21,0xFF
000c4a f031      	BREQ __REPACK1
000c4b 0f66      	LSL  R22
000c4c 0c00      	LSL  R0
000c4d 9557      	ROR  R21
000c4e 9567      	ROR  R22
000c4f 2f75      	MOV  R23,R21
000c50 9508      	RET
                 __REPACK1:
000c51 935f      	PUSH R21
000c52 2000      	TST  R0
000c53 f00a      	BRMI __REPACK2
000c54 c0cf      	RJMP __MAXRES
                 __REPACK2:
000c55 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000c56 e850      	LDI  R21,0x80
000c57 2e19      	MOV  R1,R25
000c58 2215      	AND  R1,R21
000c59 0f88      	LSL  R24
000c5a 1f99      	ROL  R25
000c5b 2795      	EOR  R25,R21
000c5c 0f55      	LSL  R21
000c5d 9587      	ROR  R24
                 
                 __UNPACK1:
000c5e e850      	LDI  R21,0x80
000c5f 2e07      	MOV  R0,R23
000c60 2205      	AND  R0,R21
000c61 0f66      	LSL  R22
000c62 1f77      	ROL  R23
000c63 2775      	EOR  R23,R21
000c64 0f55      	LSL  R21
000c65 9567      	ROR  R22
000c66 9508      	RET
                 
                 __CFD1U:
000c67 9468      	SET
000c68 c001      	RJMP __CFD1U0
                 __CFD1:
000c69 94e8      	CLT
                 __CFD1U0:
000c6a 935f      	PUSH R21
000c6b dff2      	RCALL __UNPACK1
000c6c 3870      	CPI  R23,0x80
000c6d f018      	BRLO __CFD10
000c6e 3f7f      	CPI  R23,0xFF
000c6f f408      	BRCC __CFD10
000c70 c0a7      	RJMP __ZERORES
                 __CFD10:
000c71 e156      	LDI  R21,22
000c72 1b57      	SUB  R21,R23
000c73 f4aa      	BRPL __CFD11
000c74 9551      	NEG  R21
000c75 3058      	CPI  R21,8
000c76 f40e      	BRTC __CFD19
000c77 3059      	CPI  R21,9
                 __CFD19:
000c78 f030      	BRLO __CFD17
000c79 efef      	SER  R30
000c7a efff      	SER  R31
000c7b ef6f      	SER  R22
000c7c e77f      	LDI  R23,0x7F
000c7d f977      	BLD  R23,7
000c7e c01a      	RJMP __CFD15
                 __CFD17:
000c7f 2777      	CLR  R23
000c80 2355      	TST  R21
000c81 f0b9      	BREQ __CFD15
                 __CFD18:
000c82 0fee      	LSL  R30
000c83 1fff      	ROL  R31
000c84 1f66      	ROL  R22
000c85 1f77      	ROL  R23
000c86 955a      	DEC  R21
000c87 f7d1      	BRNE __CFD18
000c88 c010      	RJMP __CFD15
                 __CFD11:
000c89 2777      	CLR  R23
                 __CFD12:
000c8a 3058      	CPI  R21,8
000c8b f028      	BRLO __CFD13
000c8c 2fef      	MOV  R30,R31
000c8d 2ff6      	MOV  R31,R22
000c8e 2f67      	MOV  R22,R23
000c8f 5058      	SUBI R21,8
000c90 cff9      	RJMP __CFD12
                 __CFD13:
000c91 2355      	TST  R21
000c92 f031      	BREQ __CFD15
                 __CFD14:
000c93 9576      	LSR  R23
000c94 9567      	ROR  R22
000c95 95f7      	ROR  R31
000c96 95e7      	ROR  R30
000c97 955a      	DEC  R21
000c98 f7d1      	BRNE __CFD14
                 __CFD15:
000c99 2000      	TST  R0
000c9a f40a      	BRPL __CFD16
000c9b d149      	RCALL __ANEGD1
                 __CFD16:
000c9c 915f      	POP  R21
000c9d 9508      	RET
                 
                 __CDF1U:
000c9e 9468      	SET
000c9f c001      	RJMP __CDF1U0
                 __CDF1:
000ca0 94e8      	CLT
                 __CDF1U0:
000ca1 9730      	SBIW R30,0
000ca2 4060      	SBCI R22,0
000ca3 4070      	SBCI R23,0
000ca4 f0b1      	BREQ __CDF10
000ca5 2400      	CLR  R0
000ca6 f026      	BRTS __CDF11
000ca7 2377      	TST  R23
000ca8 f412      	BRPL __CDF11
000ca9 9400      	COM  R0
000caa d13a      	RCALL __ANEGD1
                 __CDF11:
000cab 2e17      	MOV  R1,R23
000cac e17e      	LDI  R23,30
000cad 2011      	TST  R1
                 __CDF12:
000cae f032      	BRMI __CDF13
000caf 957a      	DEC  R23
000cb0 0fee      	LSL  R30
000cb1 1fff      	ROL  R31
000cb2 1f66      	ROL  R22
000cb3 1c11      	ROL  R1
000cb4 cff9      	RJMP __CDF12
                 __CDF13:
000cb5 2fef      	MOV  R30,R31
000cb6 2ff6      	MOV  R31,R22
000cb7 2d61      	MOV  R22,R1
000cb8 935f      	PUSH R21
000cb9 df8a      	RCALL __REPACK
000cba 915f      	POP  R21
                 __CDF10:
000cbb 9508      	RET
                 
                 __SWAPACC:
000cbc 934f      	PUSH R20
000cbd 01af      	MOVW R20,R30
000cbe 01fd      	MOVW R30,R26
000cbf 01da      	MOVW R26,R20
000cc0 01ab      	MOVW R20,R22
000cc1 01bc      	MOVW R22,R24
000cc2 01ca      	MOVW R24,R20
000cc3 2d40      	MOV  R20,R0
000cc4 2c01      	MOV  R0,R1
000cc5 2e14      	MOV  R1,R20
000cc6 914f      	POP  R20
000cc7 9508      	RET
                 
                 __UADD12:
000cc8 0fea      	ADD  R30,R26
000cc9 1ffb      	ADC  R31,R27
000cca 1f68      	ADC  R22,R24
000ccb 9508      	RET
                 
                 __NEGMAN1:
000ccc 95e0      	COM  R30
000ccd 95f0      	COM  R31
000cce 9560      	COM  R22
000ccf 5fef      	SUBI R30,-1
000cd0 4fff      	SBCI R31,-1
000cd1 4f6f      	SBCI R22,-1
000cd2 9508      	RET
                 
                 __SUBF12:
000cd3 935f      	PUSH R21
000cd4 df81      	RCALL __UNPACK
000cd5 3890      	CPI  R25,0x80
000cd6 f171      	BREQ __ADDF129
000cd7 e850      	LDI  R21,0x80
000cd8 2615      	EOR  R1,R21
                 
000cd9 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000cda 935f      	PUSH R21
000cdb df7a      	RCALL __UNPACK
000cdc 3890      	CPI  R25,0x80
000cdd f139      	BREQ __ADDF129
                 
                 __ADDF120:
000cde 3870      	CPI  R23,0x80
000cdf f121      	BREQ __ADDF128
                 __ADDF121:
000ce0 2f57      	MOV  R21,R23
000ce1 1b59      	SUB  R21,R25
000ce2 f12b      	BRVS __ADDF1211
000ce3 f412      	BRPL __ADDF122
000ce4 dfd7      	RCALL __SWAPACC
000ce5 cffa      	RJMP __ADDF121
                 __ADDF122:
000ce6 3158      	CPI  R21,24
000ce7 f018      	BRLO __ADDF123
000ce8 27aa      	CLR  R26
000ce9 27bb      	CLR  R27
000cea 2788      	CLR  R24
                 __ADDF123:
000ceb 3058      	CPI  R21,8
000cec f028      	BRLO __ADDF124
000ced 2fab      	MOV  R26,R27
000cee 2fb8      	MOV  R27,R24
000cef 2788      	CLR  R24
000cf0 5058      	SUBI R21,8
000cf1 cff9      	RJMP __ADDF123
                 __ADDF124:
000cf2 2355      	TST  R21
000cf3 f029      	BREQ __ADDF126
                 __ADDF125:
000cf4 9586      	LSR  R24
000cf5 95b7      	ROR  R27
000cf6 95a7      	ROR  R26
000cf7 955a      	DEC  R21
000cf8 f7d9      	BRNE __ADDF125
                 __ADDF126:
000cf9 2d50      	MOV  R21,R0
000cfa 2551      	EOR  R21,R1
000cfb f072      	BRMI __ADDF127
000cfc dfcb      	RCALL __UADD12
000cfd f438      	BRCC __ADDF129
000cfe 9567      	ROR  R22
000cff 95f7      	ROR  R31
000d00 95e7      	ROR  R30
000d01 9573      	INC  R23
000d02 f413      	BRVC __ADDF129
000d03 c020      	RJMP __MAXRES
                 __ADDF128:
000d04 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000d05 df3e      	RCALL __REPACK
000d06 915f      	POP  R21
000d07 9508      	RET
                 __ADDF1211:
000d08 f7d8      	BRCC __ADDF128
000d09 cffb      	RJMP __ADDF129
                 __ADDF127:
000d0a 1bea      	SUB  R30,R26
000d0b 0bfb      	SBC  R31,R27
000d0c 0b68      	SBC  R22,R24
000d0d f051      	BREQ __ZERORES
000d0e f410      	BRCC __ADDF1210
000d0f 9400      	COM  R0
000d10 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000d11 2366      	TST  R22
000d12 f392      	BRMI __ADDF129
000d13 0fee      	LSL  R30
000d14 1fff      	ROL  R31
000d15 1f66      	ROL  R22
000d16 957a      	DEC  R23
000d17 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000d18 27ee      	CLR  R30
000d19 27ff      	CLR  R31
000d1a 2766      	CLR  R22
000d1b 2777      	CLR  R23
000d1c 915f      	POP  R21
000d1d 9508      	RET
                 
                 __MINRES:
000d1e efef      	SER  R30
000d1f efff      	SER  R31
000d20 e76f      	LDI  R22,0x7F
000d21 ef7f      	SER  R23
000d22 915f      	POP  R21
000d23 9508      	RET
                 
                 __MAXRES:
000d24 efef      	SER  R30
000d25 efff      	SER  R31
000d26 e76f      	LDI  R22,0x7F
000d27 e77f      	LDI  R23,0x7F
000d28 915f      	POP  R21
000d29 9508      	RET
                 
                 __MULF12:
000d2a 935f      	PUSH R21
000d2b df2a      	RCALL __UNPACK
000d2c 3870      	CPI  R23,0x80
000d2d f351      	BREQ __ZERORES
000d2e 3890      	CPI  R25,0x80
000d2f f341      	BREQ __ZERORES
000d30 2401      	EOR  R0,R1
000d31 9408      	SEC
000d32 1f79      	ADC  R23,R25
000d33 f423      	BRVC __MULF124
000d34 f31c      	BRLT __ZERORES
                 __MULF125:
000d35 2000      	TST  R0
000d36 f33a      	BRMI __MINRES
000d37 cfec      	RJMP __MAXRES
                 __MULF124:
000d38 920f      	PUSH R0
000d39 931f      	PUSH R17
000d3a 932f      	PUSH R18
000d3b 933f      	PUSH R19
000d3c 934f      	PUSH R20
000d3d 2711      	CLR  R17
000d3e 2722      	CLR  R18
000d3f 2799      	CLR  R25
000d40 9f68      	MUL  R22,R24
000d41 01a0      	MOVW R20,R0
000d42 9f8f      	MUL  R24,R31
000d43 2d30      	MOV  R19,R0
000d44 0d41      	ADD  R20,R1
000d45 1f59      	ADC  R21,R25
000d46 9f6b      	MUL  R22,R27
000d47 0d30      	ADD  R19,R0
000d48 1d41      	ADC  R20,R1
000d49 1f59      	ADC  R21,R25
000d4a 9f8e      	MUL  R24,R30
000d4b d027      	RCALL __MULF126
000d4c 9fbf      	MUL  R27,R31
000d4d d025      	RCALL __MULF126
000d4e 9f6a      	MUL  R22,R26
000d4f d023      	RCALL __MULF126
000d50 9fbe      	MUL  R27,R30
000d51 d01d      	RCALL __MULF127
000d52 9faf      	MUL  R26,R31
000d53 d01b      	RCALL __MULF127
000d54 9fae      	MUL  R26,R30
000d55 0d11      	ADD  R17,R1
000d56 1f29      	ADC  R18,R25
000d57 1f39      	ADC  R19,R25
000d58 1f49      	ADC  R20,R25
000d59 1f59      	ADC  R21,R25
000d5a 2fe3      	MOV  R30,R19
000d5b 2ff4      	MOV  R31,R20
000d5c 2f65      	MOV  R22,R21
000d5d 2f52      	MOV  R21,R18
000d5e 914f      	POP  R20
000d5f 913f      	POP  R19
000d60 912f      	POP  R18
000d61 911f      	POP  R17
000d62 900f      	POP  R0
000d63 2366      	TST  R22
000d64 f02a      	BRMI __MULF122
000d65 0f55      	LSL  R21
000d66 1fee      	ROL  R30
000d67 1fff      	ROL  R31
000d68 1f66      	ROL  R22
000d69 c002      	RJMP __MULF123
                 __MULF122:
000d6a 9573      	INC  R23
000d6b f24b      	BRVS __MULF125
                 __MULF123:
000d6c decd      	RCALL __ROUND_REPACK
000d6d 915f      	POP  R21
000d6e 9508      	RET
                 
                 __MULF127:
000d6f 0d10      	ADD  R17,R0
000d70 1d21      	ADC  R18,R1
000d71 1f39      	ADC  R19,R25
000d72 c002      	RJMP __MULF128
                 __MULF126:
000d73 0d20      	ADD  R18,R0
000d74 1d31      	ADC  R19,R1
                 __MULF128:
000d75 1f49      	ADC  R20,R25
000d76 1f59      	ADC  R21,R25
000d77 9508      	RET
                 
                 __DIVF21:
000d78 935f      	PUSH R21
000d79 dedc      	RCALL __UNPACK
000d7a 3870      	CPI  R23,0x80
000d7b f421      	BRNE __DIVF210
000d7c 2011      	TST  R1
                 __DIVF211:
000d7d f40a      	BRPL __DIVF219
000d7e cf9f      	RJMP __MINRES
                 __DIVF219:
000d7f cfa4      	RJMP __MAXRES
                 __DIVF210:
000d80 3890      	CPI  R25,0x80
000d81 f409      	BRNE __DIVF218
                 __DIVF217:
000d82 cf95      	RJMP __ZERORES
                 __DIVF218:
000d83 2401      	EOR  R0,R1
000d84 9408      	SEC
000d85 0b97      	SBC  R25,R23
000d86 f41b      	BRVC __DIVF216
000d87 f3d4      	BRLT __DIVF217
000d88 2000      	TST  R0
000d89 cff3      	RJMP __DIVF211
                 __DIVF216:
000d8a 2f79      	MOV  R23,R25
000d8b 931f      	PUSH R17
000d8c 932f      	PUSH R18
000d8d 933f      	PUSH R19
000d8e 934f      	PUSH R20
000d8f 2411      	CLR  R1
000d90 2711      	CLR  R17
000d91 2722      	CLR  R18
000d92 2733      	CLR  R19
000d93 2744      	CLR  R20
000d94 2755      	CLR  R21
000d95 e290      	LDI  R25,32
                 __DIVF212:
000d96 17ae      	CP   R26,R30
000d97 07bf      	CPC  R27,R31
000d98 0786      	CPC  R24,R22
000d99 0741      	CPC  R20,R17
000d9a f030      	BRLO __DIVF213
000d9b 1bae      	SUB  R26,R30
000d9c 0bbf      	SBC  R27,R31
000d9d 0b86      	SBC  R24,R22
000d9e 0b41      	SBC  R20,R17
000d9f 9408      	SEC
000da0 c001      	RJMP __DIVF214
                 __DIVF213:
000da1 9488      	CLC
                 __DIVF214:
000da2 1f55      	ROL  R21
000da3 1f22      	ROL  R18
000da4 1f33      	ROL  R19
000da5 1c11      	ROL  R1
000da6 1faa      	ROL  R26
000da7 1fbb      	ROL  R27
000da8 1f88      	ROL  R24
000da9 1f44      	ROL  R20
000daa 959a      	DEC  R25
000dab f751      	BRNE __DIVF212
000dac 01f9      	MOVW R30,R18
000dad 2d61      	MOV  R22,R1
000dae 914f      	POP  R20
000daf 913f      	POP  R19
000db0 912f      	POP  R18
000db1 911f      	POP  R17
000db2 2366      	TST  R22
000db3 f032      	BRMI __DIVF215
000db4 0f55      	LSL  R21
000db5 1fee      	ROL  R30
000db6 1fff      	ROL  R31
000db7 1f66      	ROL  R22
000db8 957a      	DEC  R23
000db9 f243      	BRVS __DIVF217
                 __DIVF215:
000dba de7f      	RCALL __ROUND_REPACK
000dbb 915f      	POP  R21
000dbc 9508      	RET
                 
                 __CMPF12:
000dbd 2399      	TST  R25
000dbe f09a      	BRMI __CMPF120
000dbf 2377      	TST  R23
000dc0 f042      	BRMI __CMPF121
000dc1 1797      	CP   R25,R23
000dc2 f048      	BRLO __CMPF122
000dc3 f429      	BRNE __CMPF121
000dc4 17ae      	CP   R26,R30
000dc5 07bf      	CPC  R27,R31
000dc6 0786      	CPC  R24,R22
000dc7 f020      	BRLO __CMPF122
000dc8 f031      	BREQ __CMPF123
                 __CMPF121:
000dc9 9498      	CLZ
000dca 9488      	CLC
000dcb 9508      	RET
                 __CMPF122:
000dcc 9498      	CLZ
000dcd 9408      	SEC
000dce 9508      	RET
                 __CMPF123:
000dcf 9418      	SEZ
000dd0 9488      	CLC
000dd1 9508      	RET
                 __CMPF120:
000dd2 2377      	TST  R23
000dd3 f7c2      	BRPL __CMPF122
000dd4 1797      	CP   R25,R23
000dd5 f398      	BRLO __CMPF121
000dd6 f7a9      	BRNE __CMPF122
000dd7 17ea      	CP   R30,R26
000dd8 07fb      	CPC  R31,R27
000dd9 0768      	CPC  R22,R24
000dda f388      	BRLO __CMPF122
000ddb f399      	BREQ __CMPF123
000ddc cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000ddd 2400      	CLR  R0
000dde 0daf      	ADD  R26,R15
000ddf 1db0      	ADC  R27,R0
000de0 9508      	RET
                 
                 __ANEGW1:
000de1 95f1      	NEG  R31
000de2 95e1      	NEG  R30
000de3 40f0      	SBCI R31,0
000de4 9508      	RET
                 
                 __ANEGD1:
000de5 95f0      	COM  R31
000de6 9560      	COM  R22
000de7 9570      	COM  R23
000de8 95e1      	NEG  R30
000de9 4fff      	SBCI R31,-1
000dea 4f6f      	SBCI R22,-1
000deb 4f7f      	SBCI R23,-1
000dec 9508      	RET
                 
                 __LSLW2:
000ded 0fee      	LSL  R30
000dee 1fff      	ROL  R31
000def 0fee      	LSL  R30
000df0 1fff      	ROL  R31
000df1 9508      	RET
                 
                 __CBD1:
000df2 2ffe      	MOV  R31,R30
000df3 0fff      	ADD  R31,R31
000df4 0bff      	SBC  R31,R31
000df5 2f6f      	MOV  R22,R31
000df6 2f7f      	MOV  R23,R31
000df7 9508      	RET
                 
                 __CWD1:
000df8 2f6f      	MOV  R22,R31
000df9 0f66      	ADD  R22,R22
000dfa 0b66      	SBC  R22,R22
000dfb 2f76      	MOV  R23,R22
000dfc 9508      	RET
                 
                 __DIVB21U:
000dfd 2400      	CLR  R0
000dfe e098      	LDI  R25,8
                 __DIVB21U1:
000dff 0faa      	LSL  R26
000e00 1c00      	ROL  R0
000e01 1a0e      	SUB  R0,R30
000e02 f410      	BRCC __DIVB21U2
000e03 0e0e      	ADD  R0,R30
000e04 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000e05 60a1      	SBR  R26,1
                 __DIVB21U3:
000e06 959a      	DEC  R25
000e07 f7b9      	BRNE __DIVB21U1
000e08 2fea      	MOV  R30,R26
000e09 2da0      	MOV  R26,R0
000e0a 9508      	RET
                 
                 __DIVB21:
000e0b d05f      	RCALL __CHKSIGNB
000e0c dff0      	RCALL __DIVB21U
000e0d f40e      	BRTC __DIVB211
000e0e 95e1      	NEG  R30
                 __DIVB211:
000e0f 9508      	RET
                 
                 __DIVW21U:
000e10 2400      	CLR  R0
000e11 2411      	CLR  R1
000e12 e190      	LDI  R25,16
                 __DIVW21U1:
000e13 0faa      	LSL  R26
000e14 1fbb      	ROL  R27
000e15 1c00      	ROL  R0
000e16 1c11      	ROL  R1
000e17 1a0e      	SUB  R0,R30
000e18 0a1f      	SBC  R1,R31
000e19 f418      	BRCC __DIVW21U2
000e1a 0e0e      	ADD  R0,R30
000e1b 1e1f      	ADC  R1,R31
000e1c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000e1d 60a1      	SBR  R26,1
                 __DIVW21U3:
000e1e 959a      	DEC  R25
000e1f f799      	BRNE __DIVW21U1
000e20 01fd      	MOVW R30,R26
000e21 01d0      	MOVW R26,R0
000e22 9508      	RET
                 
                 __DIVW21:
000e23 d053      	RCALL __CHKSIGNW
000e24 dfeb      	RCALL __DIVW21U
000e25 f40e      	BRTC __DIVW211
000e26 dfba      	RCALL __ANEGW1
                 __DIVW211:
000e27 9508      	RET
                 
                 __DIVD21U:
000e28 933f      	PUSH R19
000e29 934f      	PUSH R20
000e2a 935f      	PUSH R21
000e2b 2400      	CLR  R0
000e2c 2411      	CLR  R1
000e2d 2744      	CLR  R20
000e2e 2755      	CLR  R21
000e2f e230      	LDI  R19,32
                 __DIVD21U1:
000e30 0faa      	LSL  R26
000e31 1fbb      	ROL  R27
000e32 1f88      	ROL  R24
000e33 1f99      	ROL  R25
000e34 1c00      	ROL  R0
000e35 1c11      	ROL  R1
000e36 1f44      	ROL  R20
000e37 1f55      	ROL  R21
000e38 1a0e      	SUB  R0,R30
000e39 0a1f      	SBC  R1,R31
000e3a 0b46      	SBC  R20,R22
000e3b 0b57      	SBC  R21,R23
000e3c f428      	BRCC __DIVD21U2
000e3d 0e0e      	ADD  R0,R30
000e3e 1e1f      	ADC  R1,R31
000e3f 1f46      	ADC  R20,R22
000e40 1f57      	ADC  R21,R23
000e41 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000e42 60a1      	SBR  R26,1
                 __DIVD21U3:
000e43 953a      	DEC  R19
000e44 f759      	BRNE __DIVD21U1
000e45 01fd      	MOVW R30,R26
000e46 01bc      	MOVW R22,R24
000e47 01d0      	MOVW R26,R0
000e48 01ca      	MOVW R24,R20
000e49 915f      	POP  R21
000e4a 914f      	POP  R20
000e4b 913f      	POP  R19
000e4c 9508      	RET
                 
                 __MODB21:
000e4d 94e8      	CLT
000e4e ffa7      	SBRS R26,7
000e4f c002      	RJMP __MODB211
000e50 95a1      	NEG  R26
000e51 9468      	SET
                 __MODB211:
000e52 fde7      	SBRC R30,7
000e53 95e1      	NEG  R30
000e54 dfa8      	RCALL __DIVB21U
000e55 2fea      	MOV  R30,R26
000e56 f40e      	BRTC __MODB212
000e57 95e1      	NEG  R30
                 __MODB212:
000e58 9508      	RET
                 
                 __MODW21:
000e59 94e8      	CLT
000e5a ffb7      	SBRS R27,7
000e5b c004      	RJMP __MODW211
000e5c 95a0      	COM  R26
000e5d 95b0      	COM  R27
000e5e 9611      	ADIW R26,1
000e5f 9468      	SET
                 __MODW211:
000e60 fdf7      	SBRC R31,7
000e61 df7f      	RCALL __ANEGW1
000e62 dfad      	RCALL __DIVW21U
000e63 01fd      	MOVW R30,R26
000e64 f40e      	BRTC __MODW212
000e65 df7b      	RCALL __ANEGW1
                 __MODW212:
000e66 9508      	RET
                 
                 __MODD21U:
000e67 dfc0      	RCALL __DIVD21U
000e68 01fd      	MOVW R30,R26
000e69 01bc      	MOVW R22,R24
000e6a 9508      	RET
                 
                 __CHKSIGNB:
000e6b 94e8      	CLT
000e6c ffe7      	SBRS R30,7
000e6d c002      	RJMP __CHKSB1
000e6e 95e1      	NEG  R30
000e6f 9468      	SET
                 __CHKSB1:
000e70 ffa7      	SBRS R26,7
000e71 c004      	RJMP __CHKSB2
000e72 95a1      	NEG  R26
000e73 f800      	BLD  R0,0
000e74 9403      	INC  R0
000e75 fa00      	BST  R0,0
                 __CHKSB2:
000e76 9508      	RET
                 
                 __CHKSIGNW:
000e77 94e8      	CLT
000e78 fff7      	SBRS R31,7
000e79 c002      	RJMP __CHKSW1
000e7a df66      	RCALL __ANEGW1
000e7b 9468      	SET
                 __CHKSW1:
000e7c ffb7      	SBRS R27,7
000e7d c006      	RJMP __CHKSW2
000e7e 95a0      	COM  R26
000e7f 95b0      	COM  R27
000e80 9611      	ADIW R26,1
000e81 f800      	BLD  R0,0
000e82 9403      	INC  R0
000e83 fa00      	BST  R0,0
                 __CHKSW2:
000e84 9508      	RET
                 
                 __GETW1P:
000e85 91ed      	LD   R30,X+
000e86 91fc      	LD   R31,X
000e87 9711      	SBIW R26,1
000e88 9508      	RET
                 
                 __GETD1P:
000e89 91ed      	LD   R30,X+
000e8a 91fd      	LD   R31,X+
000e8b 916d      	LD   R22,X+
000e8c 917c      	LD   R23,X
000e8d 9713      	SBIW R26,3
000e8e 9508      	RET
                 
                 __PUTDP1:
000e8f 93ed      	ST   X+,R30
000e90 93fd      	ST   X+,R31
000e91 936d      	ST   X+,R22
000e92 937c      	ST   X,R23
000e93 9508      	RET
                 
                 __GETD1S0:
000e94 81e8      	LD   R30,Y
000e95 81f9      	LDD  R31,Y+1
000e96 816a      	LDD  R22,Y+2
000e97 817b      	LDD  R23,Y+3
000e98 9508      	RET
                 
                 __PUTD1S0:
000e99 83e8      	ST   Y,R30
000e9a 83f9      	STD  Y+1,R31
000e9b 836a      	STD  Y+2,R22
000e9c 837b      	STD  Y+3,R23
000e9d 9508      	RET
                 
                 __PUTDZ20:
000e9e 83a0      	ST   Z,R26
000e9f 83b1      	STD  Z+1,R27
000ea0 8382      	STD  Z+2,R24
000ea1 8393      	STD  Z+3,R25
000ea2 9508      	RET
                 
                 __PUTPARD1:
000ea3 937a      	ST   -Y,R23
000ea4 936a      	ST   -Y,R22
000ea5 93fa      	ST   -Y,R31
000ea6 93ea      	ST   -Y,R30
000ea7 9508      	RET
                 
                 __SWAPD12:
000ea8 2e18      	MOV  R1,R24
000ea9 2f86      	MOV  R24,R22
000eaa 2d61      	MOV  R22,R1
000eab 2e19      	MOV  R1,R25
000eac 2f97      	MOV  R25,R23
000ead 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000eae 2e1b      	MOV  R1,R27
000eaf 2fbf      	MOV  R27,R31
000eb0 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000eb1 2e1a      	MOV  R1,R26
000eb2 2fae      	MOV  R26,R30
000eb3 2de1      	MOV  R30,R1
000eb4 9508      	RET
                 
                 __CPD10:
000eb5 9730      	SBIW R30,0
000eb6 4060      	SBCI R22,0
000eb7 4070      	SBCI R23,0
000eb8 9508      	RET
                 
                 __SAVELOCR6:
000eb9 935a      	ST   -Y,R21
                 __SAVELOCR5:
000eba 934a      	ST   -Y,R20
                 __SAVELOCR4:
000ebb 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ebc 932a      	ST   -Y,R18
                 __SAVELOCR2:
000ebd 931a      	ST   -Y,R17
000ebe 930a      	ST   -Y,R16
000ebf 9508      	RET
                 
                 __LOADLOCR6:
000ec0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000ec1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000ec2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ec3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ec4 8119      	LDD  R17,Y+1
000ec5 8108      	LD   R16,Y
000ec6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000ec7 0fac      	ADD  R26,R28
000ec8 1fbd      	ADC  R27,R29
                 __INITLOC0:
000ec9 9005      	LPM  R0,Z+
000eca 920d      	ST   X+,R0
000ecb 958a      	DEC  R24
000ecc f7e1      	BRNE __INITLOC0
000ecd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 105 r1 :  52 r2 :   0 r3 :   0 r4 :   9 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   4 r11:   2 r12:  10 r13:   4 r14:   0 r15:   4 
r16:  66 r17:  70 r18:  58 r19:  41 r20:  56 r21:  93 r22: 127 r23: 113 
r24:  80 r25:  72 r26: 264 r27: 119 r28:  78 r29:   2 r30: 743 r31: 262 
x  : 103 y  : 412 z  :  68 
Registers used: 27 out of 35 (77.1%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  27 add   :  20 
adiw  :  53 and   :   5 andi  :  21 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  48 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  38 
brlt  :   8 brmi  :  11 brne  :  83 brpl  :   9 brsh  :  13 brtc  :   6 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 315 
cbi   :   4 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  62 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  18 cpc   :  26 cpi   :  87 cpse  :   0 dec   :  15 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :   5 inc   :   6 jmp   :  62 ld    : 115 ldd   : 193 
ldi   : 342 lds   :  41 lpm   :  13 lsl   :  17 lsr   :   3 mov   :  85 
movw  : 131 mul   :  11 muls  :   1 mulsu :   0 neg   :  11 nop   :   0 
or    :   3 ori   :  12 out   :  28 pop   :  26 push  :  26 rcall : 105 
ret   : 128 reti  :   1 rjmp  : 186 rol   :  37 ror   :  15 sbc   :  12 
sbci  :  67 sbi   :   4 sbic  :   8 sbis  :   5 sbiw  :  56 sbr   :   5 
sbrc  :   5 sbrs  :  23 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   8 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 174 std   :  89 sts   :  35 sub   :   7 subi  :  94 
swap  :   0 tst   :  24 wdr   :   1 
Instructions used: 83 out of 117 (70.9%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001d9c   7252    328   7580  131072   5.8%
[.dseg] 0x000100 0x0005bb      0    187    187    4351   4.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
